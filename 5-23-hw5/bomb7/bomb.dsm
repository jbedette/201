;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2019-05-23 01:11:38
;; Architecture: x86-64
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x1088 -- 0x109f
0x1088:     48 83 ec 08                     	sub rsp, 8
0x108c:     48 8b 05 55 2f 20 00            	mov rax, qword ptr [rip + 0x202f55]
0x1093:     48 85 c0                        	test rax, rax
0x1096:     74 02                           	je 0x109a <_init+0x12>
0x1098:     ff d0                           	call rax <__gmon_start__>
0x109a:     48 83 c4 08                     	add rsp, 8
0x109e:     c3                              	ret 
; section: .plt
; data inside code section at 0x10a0 -- 0x10b0
0x10a0:     ff 35 4a 2e 20 00 ff 25  4c 2e 20 00 0f 1f 40 00   |.5J. ..%L. ...@.|
; function: function_10b0 at 0x10b0 -- 0x10b6
0x10b0:     ff 25 4a 2e 20 00               	jmp qword ptr [rip + 0x202e4a] <getenv>
; data inside code section at 0x10b6 -- 0x10c0
0x10b6:     68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_10c0 at 0x10c0 -- 0x10c6
0x10c0:     ff 25 42 2e 20 00               	jmp qword ptr [rip + 0x202e42] <strcasecmp>
; data inside code section at 0x10c6 -- 0x10d0
0x10c6:     68 01 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_10d0 at 0x10d0 -- 0x10d6
0x10d0:     ff 25 3a 2e 20 00               	jmp qword ptr [rip + 0x202e3a] <__errno_location>
; data inside code section at 0x10d6 -- 0x10e0
0x10d6:     68 02 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_10e0 at 0x10e0 -- 0x10e6
0x10e0:     ff 25 32 2e 20 00               	jmp qword ptr [rip + 0x202e32] <strcpy>
; data inside code section at 0x10e6 -- 0x10f0
0x10e6:     68 03 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_10f0 at 0x10f0 -- 0x10f6
0x10f0:     ff 25 2a 2e 20 00               	jmp qword ptr [rip + 0x202e2a] <puts>
; data inside code section at 0x10f6 -- 0x1100
0x10f6:     68 04 00 00 00 e9 a0 ff  ff ff                     |h.........      |
; function: function_1100 at 0x1100 -- 0x1106
0x1100:     ff 25 22 2e 20 00               	jmp qword ptr [rip + 0x202e22] <write>
; data inside code section at 0x1106 -- 0x1110
0x1106:     68 05 00 00 00 e9 90 ff  ff ff                     |h.........      |
; function: function_1110 at 0x1110 -- 0x1116
0x1110:     ff 25 1a 2e 20 00               	jmp qword ptr [rip + 0x202e1a] <__stack_chk_fail>
; data inside code section at 0x1116 -- 0x1120
0x1116:     68 06 00 00 00 e9 80 ff  ff ff                     |h.........      |
; function: function_1120 at 0x1120 -- 0x1126
0x1120:     ff 25 12 2e 20 00               	jmp qword ptr [rip + 0x202e12] <alarm>
; data inside code section at 0x1126 -- 0x1130
0x1126:     68 07 00 00 00 e9 70 ff  ff ff                     |h.....p...      |
; function: function_1130 at 0x1130 -- 0x1136
0x1130:     ff 25 0a 2e 20 00               	jmp qword ptr [rip + 0x202e0a] <close>
; data inside code section at 0x1136 -- 0x1140
0x1136:     68 08 00 00 00 e9 60 ff  ff ff                     |h.....`...      |
; function: function_1140 at 0x1140 -- 0x1146
0x1140:     ff 25 02 2e 20 00               	jmp qword ptr [rip + 0x202e02] <read>
; data inside code section at 0x1146 -- 0x1150
0x1146:     68 09 00 00 00 e9 50 ff  ff ff                     |h.....P...      |
; function: function_1150 at 0x1150 -- 0x1156
0x1150:     ff 25 fa 2d 20 00               	jmp qword ptr [rip + 0x202dfa] <fgets>
; data inside code section at 0x1156 -- 0x1160
0x1156:     68 0a 00 00 00 e9 40 ff  ff ff                     |h.....@...      |
; function: function_1160 at 0x1160 -- 0x1166
0x1160:     ff 25 f2 2d 20 00               	jmp qword ptr [rip + 0x202df2] <signal>
; data inside code section at 0x1166 -- 0x1170
0x1166:     68 0b 00 00 00 e9 30 ff  ff ff                     |h.....0...      |
; function: function_1170 at 0x1170 -- 0x1176
0x1170:     ff 25 ea 2d 20 00               	jmp qword ptr [rip + 0x202dea] <gethostbyname>
; data inside code section at 0x1176 -- 0x1180
0x1176:     68 0c 00 00 00 e9 20 ff  ff ff                     |h..... ...      |
; function: function_1180 at 0x1180 -- 0x1186
0x1180:     ff 25 e2 2d 20 00               	jmp qword ptr [rip + 0x202de2] <__memmove_chk>
; data inside code section at 0x1186 -- 0x1190
0x1186:     68 0d 00 00 00 e9 10 ff  ff ff                     |h.........      |
; function: function_1190 at 0x1190 -- 0x1196
0x1190:     ff 25 da 2d 20 00               	jmp qword ptr [rip + 0x202dda] <strtol>
; data inside code section at 0x1196 -- 0x11a0
0x1196:     68 0e 00 00 00 e9 00 ff  ff ff                     |h.........      |
; function: function_11a0 at 0x11a0 -- 0x11a6
0x11a0:     ff 25 d2 2d 20 00               	jmp qword ptr [rip + 0x202dd2] <fflush>
; data inside code section at 0x11a6 -- 0x11b0
0x11a6:     68 0f 00 00 00 e9 f0 fe  ff ff                     |h.........      |
; function: function_11b0 at 0x11b0 -- 0x11b6
0x11b0:     ff 25 ca 2d 20 00               	jmp qword ptr [rip + 0x202dca] <sscanf>
; data inside code section at 0x11b6 -- 0x11c0
0x11b6:     68 10 00 00 00 e9 e0 fe  ff ff                     |h.........      |
; function: function_11c0 at 0x11c0 -- 0x11c6
0x11c0:     ff 25 c2 2d 20 00               	jmp qword ptr [rip + 0x202dc2] <__printf_chk>
; data inside code section at 0x11c6 -- 0x11d0
0x11c6:     68 11 00 00 00 e9 d0 fe  ff ff                     |h.........      |
; function: function_11d0 at 0x11d0 -- 0x11d6
0x11d0:     ff 25 ba 2d 20 00               	jmp qword ptr [rip + 0x202dba] <fopen>
; data inside code section at 0x11d6 -- 0x11e0
0x11d6:     68 12 00 00 00 e9 c0 fe  ff ff                     |h.........      |
; function: function_11e0 at 0x11e0 -- 0x11e6
0x11e0:     ff 25 b2 2d 20 00               	jmp qword ptr [rip + 0x202db2] <gethostname>
; data inside code section at 0x11e6 -- 0x11f0
0x11e6:     68 13 00 00 00 e9 b0 fe  ff ff                     |h.........      |
; function: function_11f0 at 0x11f0 -- 0x11f6
0x11f0:     ff 25 aa 2d 20 00               	jmp qword ptr [rip + 0x202daa] <exit>
; data inside code section at 0x11f6 -- 0x1200
0x11f6:     68 14 00 00 00 e9 a0 fe  ff ff                     |h.........      |
; function: function_1200 at 0x1200 -- 0x1206
0x1200:     ff 25 a2 2d 20 00               	jmp qword ptr [rip + 0x202da2] <connect>
; data inside code section at 0x1206 -- 0x1210
0x1206:     68 15 00 00 00 e9 90 fe  ff ff                     |h.........      |
; function: function_1210 at 0x1210 -- 0x1216
0x1210:     ff 25 9a 2d 20 00               	jmp qword ptr [rip + 0x202d9a] <__fprintf_chk>
; data inside code section at 0x1216 -- 0x1220
0x1216:     68 16 00 00 00 e9 80 fe  ff ff                     |h.........      |
; function: function_1220 at 0x1220 -- 0x1226
0x1220:     ff 25 92 2d 20 00               	jmp qword ptr [rip + 0x202d92] <sleep>
; data inside code section at 0x1226 -- 0x1230
0x1226:     68 17 00 00 00 e9 70 fe  ff ff                     |h.....p...      |
; function: function_1230 at 0x1230 -- 0x1236
0x1230:     ff 25 8a 2d 20 00               	jmp qword ptr [rip + 0x202d8a] <__ctype_b_loc>
; data inside code section at 0x1236 -- 0x1240
0x1236:     68 18 00 00 00 e9 60 fe  ff ff                     |h.....`...      |
; function: function_1240 at 0x1240 -- 0x1246
0x1240:     ff 25 82 2d 20 00               	jmp qword ptr [rip + 0x202d82] <__sprintf_chk>
; data inside code section at 0x1246 -- 0x1250
0x1246:     68 19 00 00 00 e9 50 fe  ff ff                     |h.....P...      |
; function: function_1250 at 0x1250 -- 0x1256
0x1250:     ff 25 7a 2d 20 00               	jmp qword ptr [rip + 0x202d7a] <socket>
; data inside code section at 0x1256 -- 0x1260
0x1256:     68 1a 00 00 00 e9 40 fe  ff ff                     |h.....@...      |
; section: .plt.got
; function: function_1260 at 0x1260 -- 0x1266
0x1260:     ff 25 92 2d 20 00               	jmp qword ptr [rip + 0x202d92] <__cxa_finalize>
; data inside code section at 0x1266 -- 0x1268
0x1266:     66 90                                              |f.              |
; section: .text
; function: _start at 0x1270 -- 0x129b
0x1270:     31 ed                           	xor ebp, ebp
0x1272:     49 89 d1                        	mov r9, rdx
0x1275:     5e                              	pop rsi
0x1276:     48 89 e2                        	mov rdx, rsp
0x1279:     48 83 e4 f0                     	and rsp, 0xfffffffffffffff0
0x127d:     50                              	push rax
0x127e:     54                              	push rsp
0x127f:     4c 8d 05 ca 19 00 00            	lea r8, [rip + 0x19ca]
0x1286:     48 8d 0d 53 19 00 00            	lea rcx, [rip + 0x1953]
0x128d:     48 8d 3d e6 00 00 00            	lea rdi, [rip + 0xe6]
0x1294:     ff 15 46 2d 20 00               	call qword ptr [rip + 0x202d46] <__libc_start_main>
0x129a:     f4                              	hlt 
; data inside code section at 0x129b -- 0x12a0
0x129b:     0f 1f 44 00 00                                     |..D..           |
; function: deregister_tm_clones at 0x12a0 -- 0x12d2
0x12a0:     48 8d 3d d9 33 20 00            	lea rdi, [rip + 0x2033d9]
0x12a7:     55                              	push rbp
0x12a8:     48 8d 05 d1 33 20 00            	lea rax, [rip + 0x2033d1]
0x12af:     48 39 f8                        	cmp rax, rdi
0x12b2:     48 89 e5                        	mov rbp, rsp
0x12b5:     74 19                           	je 0x12d0 <deregister_tm_clones+0x30>
0x12b7:     48 8b 05 1a 2d 20 00            	mov rax, qword ptr [rip + 0x202d1a]
0x12be:     48 85 c0                        	test rax, rax
0x12c1:     74 0d                           	je 0x12d0 <deregister_tm_clones+0x30>
0x12c3:     5d                              	pop rbp
0x12c4:     ff e0                           	jmp rax <_ITM_deregisterTMCloneTable>
; data inside code section at 0x12c6 -- 0x12d0
0x12c6:     66 2e 0f 1f 84 00 00 00  00 00                     |f.........      |
0x12d0:     5d                              	pop rbp
0x12d1:     c3                              	ret 
; data inside code section at 0x12d2 -- 0x12e0
0x12d2:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: register_tm_clones at 0x12e0 -- 0x1322
0x12e0:     48 8d 3d 99 33 20 00            	lea rdi, [rip + 0x203399]
0x12e7:     48 8d 35 92 33 20 00            	lea rsi, [rip + 0x203392]
0x12ee:     55                              	push rbp
0x12ef:     48 29 fe                        	sub rsi, rdi
0x12f2:     48 89 e5                        	mov rbp, rsp
0x12f5:     48 c1 fe 03                     	sar rsi, 3
0x12f9:     48 89 f0                        	mov rax, rsi
0x12fc:     48 c1 e8 3f                     	shr rax, 0x3f
0x1300:     48 01 c6                        	add rsi, rax
0x1303:     48 d1 fe                        	sar rsi, 1
0x1306:     74 18                           	je 0x1320 <register_tm_clones+0x40>
0x1308:     48 8b 05 e1 2c 20 00            	mov rax, qword ptr [rip + 0x202ce1]
0x130f:     48 85 c0                        	test rax, rax
0x1312:     74 0c                           	je 0x1320 <register_tm_clones+0x40>
0x1314:     5d                              	pop rbp
0x1315:     ff e0                           	jmp rax <_ITM_registerTMCloneTable>
; data inside code section at 0x1317 -- 0x1320
0x1317:     66 0f 1f 84 00 00 00 00  00                        |f........       |
0x1320:     5d                              	pop rbp
0x1321:     c3                              	ret 
; data inside code section at 0x1322 -- 0x1330
0x1322:     0f 1f 40 00 66 2e 0f 1f  84 00 00 00 00 00         |..@.f.........  |
; function: __do_global_dtors_aux at 0x1330 -- 0x136a
0x1330:     80 3d 71 33 20 00 00            	cmp byte ptr [rip + 0x203371], 0
0x1337:     75 2f                           	jne 0x1368 <__do_global_dtors_aux+0x38>
0x1339:     48 83 3d b7 2c 20 00 00         	cmp qword ptr [rip + 0x202cb7], 0
0x1341:     55                              	push rbp
0x1342:     48 89 e5                        	mov rbp, rsp
0x1345:     74 0c                           	je 0x1353 <__do_global_dtors_aux+0x23>
0x1347:     48 8b 3d ba 2c 20 00            	mov rdi, qword ptr [rip + 0x202cba]
0x134e:     e8 0d ff ff ff                  	call 0x1260 <__cxa_finalize>
0x1353:     e8 48 ff ff ff                  	call 0x12a0 <deregister_tm_clones>
0x1358:     c6 05 49 33 20 00 01            	mov byte ptr [rip + 0x203349], 1
0x135f:     5d                              	pop rbp
0x1360:     c3                              	ret 
; data inside code section at 0x1361 -- 0x1368
0x1361:     0f 1f 80 00 00 00 00                               |.......         |
0x1368:     f3 c3                           	ret 
; data inside code section at 0x136a -- 0x1370
0x136a:     66 0f 1f 44 00 00                                  |f..D..          |
; function: frame_dummy at 0x1370 -- 0x137a
0x1370:     55                              	push rbp
0x1371:     48 89 e5                        	mov rbp, rsp
0x1374:     5d                              	pop rbp
0x1375:     e9 66 ff ff ff                  	jmp 0x12e0 <register_tm_clones>
; function: main at 0x137a -- 0x14d4
0x137a:     53                              	push rbx
0x137b:     83 ff 01                        	cmp edi, 1
0x137e:     0f 84 f8 00 00 00               	je 0x147c <main+0x102>
0x1384:     48 89 f3                        	mov rbx, rsi
0x1387:     83 ff 02                        	cmp edi, 2
0x138a:     0f 85 21 01 00 00               	jne 0x14b1 <main+0x137>
0x1390:     48 8b 7e 08                     	mov rdi, qword ptr [rsi + 8]
0x1394:     48 8d 35 c9 18 00 00            	lea rsi, [rip + 0x18c9]
0x139b:     e8 30 fe ff ff                  	call 0x11d0 <fopen>
0x13a0:     48 89 05 09 33 20 00            	mov qword ptr [rip + 0x203309], rax
0x13a7:     48 85 c0                        	test rax, rax
0x13aa:     0f 84 df 00 00 00               	je 0x148f <main+0x115>
0x13b0:     e8 27 07 00 00                  	call 0x1adc <initialize_bomb>
0x13b5:     48 8d 3d 2c 19 00 00            	lea rdi, [rip + 0x192c]
0x13bc:     e8 2f fd ff ff                  	call 0x10f0 <puts>
0x13c1:     48 8d 3d 60 19 00 00            	lea rdi, [rip + 0x1960]
0x13c8:     e8 23 fd ff ff                  	call 0x10f0 <puts>
0x13cd:     e8 24 0a 00 00                  	call 0x1df6 <read_line>
0x13d2:     48 89 c7                        	mov rdi, rax
0x13d5:     e8 fa 00 00 00                  	call 0x14d4 <phase_1>
0x13da:     e8 5b 0b 00 00                  	call 0x1f3a <phase_defused>
0x13df:     48 8d 3d 72 19 00 00            	lea rdi, [rip + 0x1972]
0x13e6:     e8 05 fd ff ff                  	call 0x10f0 <puts>
0x13eb:     e8 06 0a 00 00                  	call 0x1df6 <read_line>
0x13f0:     48 89 c7                        	mov rdi, rax
0x13f3:     e8 fc 00 00 00                  	call 0x14f4 <phase_2>
0x13f8:     e8 3d 0b 00 00                  	call 0x1f3a <phase_defused>
0x13fd:     48 8d 3d 99 18 00 00            	lea rdi, [rip + 0x1899]
0x1404:     e8 e7 fc ff ff                  	call 0x10f0 <puts>
0x1409:     e8 e8 09 00 00                  	call 0x1df6 <read_line>
0x140e:     48 89 c7                        	mov rdi, rax
0x1411:     e8 4c 01 00 00                  	call 0x1562 <phase_3>
0x1416:     e8 1f 0b 00 00                  	call 0x1f3a <phase_defused>
0x141b:     48 8d 3d 99 18 00 00            	lea rdi, [rip + 0x1899]
0x1422:     e8 c9 fc ff ff                  	call 0x10f0 <puts>
0x1427:     e8 ca 09 00 00                  	call 0x1df6 <read_line>
0x142c:     48 89 c7                        	mov rdi, rax
0x142f:     e8 e0 02 00 00                  	call 0x1714 <phase_4>
0x1434:     e8 01 0b 00 00                  	call 0x1f3a <phase_defused>
0x1439:     48 8d 3d 48 19 00 00            	lea rdi, [rip + 0x1948]
0x1440:     e8 ab fc ff ff                  	call 0x10f0 <puts>
0x1445:     e8 ac 09 00 00                  	call 0x1df6 <read_line>
0x144a:     48 89 c7                        	mov rdi, rax
0x144d:     e8 37 03 00 00                  	call 0x1789 <phase_5>
0x1452:     e8 e3 0a 00 00                  	call 0x1f3a <phase_defused>
0x1457:     48 8d 3d 6c 18 00 00            	lea rdi, [rip + 0x186c]
0x145e:     e8 8d fc ff ff                  	call 0x10f0 <puts>
0x1463:     e8 8e 09 00 00                  	call 0x1df6 <read_line>
0x1468:     48 89 c7                        	mov rdi, rax
0x146b:     e8 ac 03 00 00                  	call 0x181c <phase_6>
0x1470:     e8 c5 0a 00 00                  	call 0x1f3a <phase_defused>
0x1475:     b8 00 00 00 00                  	mov eax, 0
0x147a:     5b                              	pop rbx
0x147b:     c3                              	ret 
0x147c:     48 8b 05 0d 32 20 00            	mov rax, qword ptr [rip + 0x20320d]
0x1483:     48 89 05 26 32 20 00            	mov qword ptr [rip + 0x203226], rax
0x148a:     e9 21 ff ff ff                  	jmp 0x13b0 <main+0x36>
0x148f:     48 8b 4b 08                     	mov rcx, qword ptr [rbx + 8]
0x1493:     48 8b 13                        	mov rdx, qword ptr [rbx]
0x1496:     48 8d 35 c9 17 00 00            	lea rsi, [rip + 0x17c9]
0x149d:     bf 01 00 00 00                  	mov edi, 1
0x14a2:     e8 19 fd ff ff                  	call 0x11c0 <__printf_chk>
0x14a7:     bf 08 00 00 00                  	mov edi, 8
0x14ac:     e8 3f fd ff ff                  	call 0x11f0 <exit>
0x14b1:     48 8b 16                        	mov rdx, qword ptr [rsi]
0x14b4:     48 8d 35 c8 17 00 00            	lea rsi, [rip + 0x17c8]
0x14bb:     bf 01 00 00 00                  	mov edi, 1
0x14c0:     b8 00 00 00 00                  	mov eax, 0
0x14c5:     e8 f6 fc ff ff                  	call 0x11c0 <__printf_chk>
0x14ca:     bf 08 00 00 00                  	mov edi, 8
0x14cf:     e8 1c fd ff ff                  	call 0x11f0 <exit>
; function: phase_1 at 0x14d4 -- 0x14f4
0x14d4:     48 83 ec 08                     	sub rsp, 8
0x14d8:     48 8d 35 d1 18 00 00            	lea rsi, [rip + 0x18d1]
0x14df:     e8 91 05 00 00                  	call 0x1a75 <strings_not_equal>
0x14e4:     85 c0                           	test eax, eax
0x14e6:     75 05                           	jne 0x14ed <phase_1+0x19>
0x14e8:     48 83 c4 08                     	add rsp, 8
0x14ec:     c3                              	ret 
0x14ed:     e8 87 08 00 00                  	call 0x1d79 <explode_bomb>
0x14f2:     eb f4                           	jmp 0x14e8 <phase_1+0x14>
; function: phase_2 at 0x14f4 -- 0x1562
0x14f4:     55                              	push rbp
0x14f5:     53                              	push rbx
0x14f6:     48 83 ec 28                     	sub rsp, 0x28
0x14fa:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1503:     48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x1508:     31 c0                           	xor eax, eax
0x150a:     48 89 e6                        	mov rsi, rsp
0x150d:     e8 a3 08 00 00                  	call 0x1db5 <read_six_numbers>
0x1512:     83 3c 24 00                     	cmp dword ptr [rsp], 0
0x1516:     78 0a                           	js 0x1522 <phase_2+0x2e>
0x1518:     bb 01 00 00 00                  	mov ebx, 1
0x151d:     48 89 e5                        	mov rbp, rsp
0x1520:     eb 11                           	jmp 0x1533 <phase_2+0x3f>
0x1522:     e8 52 08 00 00                  	call 0x1d79 <explode_bomb>
0x1527:     eb ef                           	jmp 0x1518 <phase_2+0x24>
0x1529:     48 83 c3 01                     	add rbx, 1
0x152d:     48 83 fb 06                     	cmp rbx, 6
0x1531:     74 13                           	je 0x1546 <phase_2+0x52>
0x1533:     89 d8                           	mov eax, ebx
0x1535:     03 44 9d fc                     	add eax, dword ptr [rbp + rbx*4 - 4]
0x1539:     39 44 9d 00                     	cmp dword ptr [rbp + rbx*4], eax
0x153d:     74 ea                           	je 0x1529 <phase_2+0x35>
0x153f:     e8 35 08 00 00                  	call 0x1d79 <explode_bomb>
0x1544:     eb e3                           	jmp 0x1529 <phase_2+0x35>
0x1546:     48 8b 44 24 18                  	mov rax, qword ptr [rsp + 0x18]
0x154b:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1554:     75 07                           	jne 0x155d <phase_2+0x69>
0x1556:     48 83 c4 28                     	add rsp, 0x28
0x155a:     5b                              	pop rbx
0x155b:     5d                              	pop rbp
0x155c:     c3                              	ret 
0x155d:     e8 ae fb ff ff                  	call 0x1110 <__stack_chk_fail>
; function: phase_3 at 0x1562 -- 0x16d5
0x1562:     48 83 ec 28                     	sub rsp, 0x28
0x1566:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x156f:     48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x1574:     31 c0                           	xor eax, eax
0x1576:     48 8d 4c 24 0f                  	lea rcx, [rsp + 0xf]
0x157b:     48 8d 54 24 10                  	lea rdx, [rsp + 0x10]
0x1580:     4c 8d 44 24 14                  	lea r8, [rsp + 0x14]
0x1585:     48 8d 35 82 18 00 00            	lea rsi, [rip + 0x1882]
0x158c:     e8 1f fc ff ff                  	call 0x11b0 <sscanf>
0x1591:     83 f8 02                        	cmp eax, 2
0x1594:     7e 1f                           	jle 0x15b5 <phase_3+0x53>
0x1596:     83 7c 24 10 07                  	cmp dword ptr [rsp + 0x10], 7
0x159b:     0f 87 05 01 00 00               	ja 0x16a6 <phase_3+0x144>
0x15a1:     8b 44 24 10                     	mov eax, dword ptr [rsp + 0x10]
0x15a5:     48 8d 15 74 18 00 00            	lea rdx, [rip + 0x1874]
0x15ac:     48 63 04 82                     	movsxd rax, dword ptr [rdx + rax*4]
0x15b0:     48 01 d0                        	add rax, rdx
0x15b3:     ff e0                           	jmp rax
0x15b5:     e8 bf 07 00 00                  	call 0x1d79 <explode_bomb>
0x15ba:     eb da                           	jmp 0x1596 <phase_3+0x34>
0x15bc:     b8 6a 00 00 00                  	mov eax, 0x6a
0x15c1:     81 7c 24 14 c5 00 00 00         	cmp dword ptr [rsp + 0x14], 0xc5
0x15c9:     0f 84 e1 00 00 00               	je 0x16b0 <phase_3+0x14e>
0x15cf:     e8 a5 07 00 00                  	call 0x1d79 <explode_bomb>
0x15d4:     b8 6a 00 00 00                  	mov eax, 0x6a
0x15d9:     e9 d2 00 00 00                  	jmp 0x16b0 <phase_3+0x14e>
0x15de:     b8 6d 00 00 00                  	mov eax, 0x6d
0x15e3:     81 7c 24 14 b6 00 00 00         	cmp dword ptr [rsp + 0x14], 0xb6
0x15eb:     0f 84 bf 00 00 00               	je 0x16b0 <phase_3+0x14e>
0x15f1:     e8 83 07 00 00                  	call 0x1d79 <explode_bomb>
0x15f6:     b8 6d 00 00 00                  	mov eax, 0x6d
0x15fb:     e9 b0 00 00 00                  	jmp 0x16b0 <phase_3+0x14e>
0x1600:     b8 7a 00 00 00                  	mov eax, 0x7a
0x1605:     81 7c 24 14 95 02 00 00         	cmp dword ptr [rsp + 0x14], 0x295
0x160d:     0f 84 9d 00 00 00               	je 0x16b0 <phase_3+0x14e>
0x1613:     e8 61 07 00 00                  	call 0x1d79 <explode_bomb>
0x1618:     b8 7a 00 00 00                  	mov eax, 0x7a
0x161d:     e9 8e 00 00 00                  	jmp 0x16b0 <phase_3+0x14e>
0x1622:     b8 6b 00 00 00                  	mov eax, 0x6b
0x1627:     81 7c 24 14 87 03 00 00         	cmp dword ptr [rsp + 0x14], 0x387
0x162f:     74 7f                           	je 0x16b0 <phase_3+0x14e>
0x1631:     e8 43 07 00 00                  	call 0x1d79 <explode_bomb>
0x1636:     b8 6b 00 00 00                  	mov eax, 0x6b
0x163b:     eb 73                           	jmp 0x16b0 <phase_3+0x14e>
0x163d:     b8 6e 00 00 00                  	mov eax, 0x6e
0x1642:     81 7c 24 14 6f 03 00 00         	cmp dword ptr [rsp + 0x14], 0x36f
0x164a:     74 64                           	je 0x16b0 <phase_3+0x14e>
0x164c:     e8 28 07 00 00                  	call 0x1d79 <explode_bomb>
0x1651:     b8 6e 00 00 00                  	mov eax, 0x6e
0x1656:     eb 58                           	jmp 0x16b0 <phase_3+0x14e>
0x1658:     b8 74 00 00 00                  	mov eax, 0x74
0x165d:     81 7c 24 14 fa 01 00 00         	cmp dword ptr [rsp + 0x14], 0x1fa
0x1665:     74 49                           	je 0x16b0 <phase_3+0x14e>
0x1667:     e8 0d 07 00 00                  	call 0x1d79 <explode_bomb>
0x166c:     b8 74 00 00 00                  	mov eax, 0x74
0x1671:     eb 3d                           	jmp 0x16b0 <phase_3+0x14e>
0x1673:     b8 71 00 00 00                  	mov eax, 0x71
0x1678:     81 7c 24 14 fb 00 00 00         	cmp dword ptr [rsp + 0x14], 0xfb
0x1680:     74 2e                           	je 0x16b0 <phase_3+0x14e>
0x1682:     e8 f2 06 00 00                  	call 0x1d79 <explode_bomb>
0x1687:     b8 71 00 00 00                  	mov eax, 0x71
0x168c:     eb 22                           	jmp 0x16b0 <phase_3+0x14e>
0x168e:     b8 63 00 00 00                  	mov eax, 0x63
0x1693:     83 7c 24 14 51                  	cmp dword ptr [rsp + 0x14], 0x51
0x1698:     74 16                           	je 0x16b0 <phase_3+0x14e>
0x169a:     e8 da 06 00 00                  	call 0x1d79 <explode_bomb>
0x169f:     b8 63 00 00 00                  	mov eax, 0x63
0x16a4:     eb 0a                           	jmp 0x16b0 <phase_3+0x14e>
0x16a6:     e8 ce 06 00 00                  	call 0x1d79 <explode_bomb>
0x16ab:     b8 78 00 00 00                  	mov eax, 0x78
0x16b0:     38 44 24 0f                     	cmp byte ptr [rsp + 0xf], al
0x16b4:     74 05                           	je 0x16bb <phase_3+0x159>
0x16b6:     e8 be 06 00 00                  	call 0x1d79 <explode_bomb>
0x16bb:     48 8b 44 24 18                  	mov rax, qword ptr [rsp + 0x18]
0x16c0:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x16c9:     75 05                           	jne 0x16d0 <phase_3+0x16e>
0x16cb:     48 83 c4 28                     	add rsp, 0x28
0x16cf:     c3                              	ret 
0x16d0:     e8 3b fa ff ff                  	call 0x1110 <__stack_chk_fail>
; function: func4 at 0x16d5 -- 0x1714
0x16d5:     48 83 ec 08                     	sub rsp, 8
0x16d9:     89 d0                           	mov eax, edx
0x16db:     29 f0                           	sub eax, esi
0x16dd:     89 c1                           	mov ecx, eax
0x16df:     c1 e9 1f                        	shr ecx, 0x1f
0x16e2:     01 c1                           	add ecx, eax
0x16e4:     d1 f9                           	sar ecx, 1
0x16e6:     01 f1                           	add ecx, esi
0x16e8:     39 f9                           	cmp ecx, edi
0x16ea:     7f 0e                           	jg 0x16fa <func4+0x25>
0x16ec:     b8 00 00 00 00                  	mov eax, 0
0x16f1:     39 f9                           	cmp ecx, edi
0x16f3:     7c 11                           	jl 0x1706 <func4+0x31>
0x16f5:     48 83 c4 08                     	add rsp, 8
0x16f9:     c3                              	ret 
0x16fa:     8d 51 ff                        	lea edx, [rcx - 1]
0x16fd:     e8 d3 ff ff ff                  	call 0x16d5 <func4>
0x1702:     01 c0                           	add eax, eax
0x1704:     eb ef                           	jmp 0x16f5 <func4+0x20>
0x1706:     8d 71 01                        	lea esi, [rcx + 1]
0x1709:     e8 c7 ff ff ff                  	call 0x16d5 <func4>
0x170e:     8d 44 00 01                     	lea eax, [rax + rax + 1]
0x1712:     eb e1                           	jmp 0x16f5 <func4+0x20>
; function: phase_4 at 0x1714 -- 0x1789
0x1714:     48 83 ec 18                     	sub rsp, 0x18
0x1718:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1721:     48 89 44 24 08                  	mov qword ptr [rsp + 8], rax
0x1726:     31 c0                           	xor eax, eax
0x1728:     48 8d 4c 24 04                  	lea rcx, [rsp + 4]
0x172d:     48 89 e2                        	mov rdx, rsp
0x1730:     48 8d 35 96 19 00 00            	lea rsi, [rip + 0x1996]
0x1737:     e8 74 fa ff ff                  	call 0x11b0 <sscanf>
0x173c:     83 f8 02                        	cmp eax, 2
0x173f:     75 06                           	jne 0x1747 <phase_4+0x33>
0x1741:     83 3c 24 0e                     	cmp dword ptr [rsp], 0xe
0x1745:     76 05                           	jbe 0x174c <phase_4+0x38>
0x1747:     e8 2d 06 00 00                  	call 0x1d79 <explode_bomb>
0x174c:     ba 0e 00 00 00                  	mov edx, 0xe
0x1751:     be 00 00 00 00                  	mov esi, 0
0x1756:     8b 3c 24                        	mov edi, dword ptr [rsp]
0x1759:     e8 77 ff ff ff                  	call 0x16d5 <func4>
0x175e:     83 f8 02                        	cmp eax, 2
0x1761:     75 07                           	jne 0x176a <phase_4+0x56>
0x1763:     83 7c 24 04 02                  	cmp dword ptr [rsp + 4], 2
0x1768:     74 05                           	je 0x176f <phase_4+0x5b>
0x176a:     e8 0a 06 00 00                  	call 0x1d79 <explode_bomb>
0x176f:     48 8b 44 24 08                  	mov rax, qword ptr [rsp + 8]
0x1774:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x177d:     75 05                           	jne 0x1784 <phase_4+0x70>
0x177f:     48 83 c4 18                     	add rsp, 0x18
0x1783:     c3                              	ret 
0x1784:     e8 87 f9 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: phase_5 at 0x1789 -- 0x181c
0x1789:     48 83 ec 18                     	sub rsp, 0x18
0x178d:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1796:     48 89 44 24 08                  	mov qword ptr [rsp + 8], rax
0x179b:     31 c0                           	xor eax, eax
0x179d:     48 8d 4c 24 04                  	lea rcx, [rsp + 4]
0x17a2:     48 89 e2                        	mov rdx, rsp
0x17a5:     48 8d 35 21 19 00 00            	lea rsi, [rip + 0x1921]
0x17ac:     e8 ff f9 ff ff                  	call 0x11b0 <sscanf>
0x17b1:     83 f8 01                        	cmp eax, 1
0x17b4:     7e 5a                           	jle 0x1810 <phase_5+0x87>
0x17b6:     8b 04 24                        	mov eax, dword ptr [rsp]
0x17b9:     83 e0 0f                        	and eax, 0xf
0x17bc:     89 04 24                        	mov dword ptr [rsp], eax
0x17bf:     83 f8 0f                        	cmp eax, 0xf
0x17c2:     74 32                           	je 0x17f6 <phase_5+0x6d>
0x17c4:     b9 00 00 00 00                  	mov ecx, 0
0x17c9:     ba 00 00 00 00                  	mov edx, 0
0x17ce:     48 8d 35 6b 16 00 00            	lea rsi, [rip + 0x166b]
0x17d5:     83 c2 01                        	add edx, 1
0x17d8:     48 98                           	cdqe 
0x17da:     8b 04 86                        	mov eax, dword ptr [rsi + rax*4]
0x17dd:     01 c1                           	add ecx, eax
0x17df:     83 f8 0f                        	cmp eax, 0xf
0x17e2:     75 f1                           	jne 0x17d5 <phase_5+0x4c>
0x17e4:     c7 04 24 0f 00 00 00            	mov dword ptr [rsp], 0xf
0x17eb:     83 fa 0f                        	cmp edx, 0xf
0x17ee:     75 06                           	jne 0x17f6 <phase_5+0x6d>
0x17f0:     39 4c 24 04                     	cmp dword ptr [rsp + 4], ecx
0x17f4:     74 05                           	je 0x17fb <phase_5+0x72>
0x17f6:     e8 7e 05 00 00                  	call 0x1d79 <explode_bomb>
0x17fb:     48 8b 44 24 08                  	mov rax, qword ptr [rsp + 8]
0x1800:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1809:     75 0c                           	jne 0x1817 <phase_5+0x8e>
0x180b:     48 83 c4 18                     	add rsp, 0x18
0x180f:     c3                              	ret 
0x1810:     e8 64 05 00 00                  	call 0x1d79 <explode_bomb>
0x1815:     eb 9f                           	jmp 0x17b6 <phase_5+0x2d>
0x1817:     e8 f4 f8 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: phase_6 at 0x181c -- 0x193e
0x181c:     41 55                           	push r13
0x181e:     41 54                           	push r12
0x1820:     55                              	push rbp
0x1821:     53                              	push rbx
0x1822:     48 83 ec 68                     	sub rsp, 0x68
0x1826:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x182f:     48 89 44 24 58                  	mov qword ptr [rsp + 0x58], rax
0x1834:     31 c0                           	xor eax, eax
0x1836:     49 89 e4                        	mov r12, rsp
0x1839:     4c 89 e6                        	mov rsi, r12
0x183c:     e8 74 05 00 00                  	call 0x1db5 <read_six_numbers>
0x1841:     41 bd 00 00 00 00               	mov r13d, 0
0x1847:     eb 25                           	jmp 0x186e <phase_6+0x52>
0x1849:     e8 2b 05 00 00                  	call 0x1d79 <explode_bomb>
0x184e:     eb 2d                           	jmp 0x187d <phase_6+0x61>
0x1850:     83 c3 01                        	add ebx, 1
0x1853:     83 fb 05                        	cmp ebx, 5
0x1856:     7f 12                           	jg 0x186a <phase_6+0x4e>
0x1858:     48 63 c3                        	movsxd rax, ebx
0x185b:     8b 04 84                        	mov eax, dword ptr [rsp + rax*4]
0x185e:     39 45 00                        	cmp dword ptr [rbp], eax
0x1861:     75 ed                           	jne 0x1850 <phase_6+0x34>
0x1863:     e8 11 05 00 00                  	call 0x1d79 <explode_bomb>
0x1868:     eb e6                           	jmp 0x1850 <phase_6+0x34>
0x186a:     49 83 c4 04                     	add r12, 4
0x186e:     4c 89 e5                        	mov rbp, r12
0x1871:     41 8b 04 24                     	mov eax, dword ptr [r12]
0x1875:     83 e8 01                        	sub eax, 1
0x1878:     83 f8 05                        	cmp eax, 5
0x187b:     77 cc                           	ja 0x1849 <phase_6+0x2d>
0x187d:     41 83 c5 01                     	add r13d, 1
0x1881:     41 83 fd 06                     	cmp r13d, 6
0x1885:     74 35                           	je 0x18bc <phase_6+0xa0>
0x1887:     44 89 eb                        	mov ebx, r13d
0x188a:     eb cc                           	jmp 0x1858 <phase_6+0x3c>
0x188c:     48 8b 52 08                     	mov rdx, qword ptr [rdx + 8]
0x1890:     83 c0 01                        	add eax, 1
0x1893:     39 c8                           	cmp eax, ecx
0x1895:     75 f5                           	jne 0x188c <phase_6+0x70>
0x1897:     48 89 54 f4 20                  	mov qword ptr [rsp + rsi*8 + 0x20], rdx
0x189c:     48 83 c6 01                     	add rsi, 1
0x18a0:     48 83 fe 06                     	cmp rsi, 6
0x18a4:     74 1d                           	je 0x18c3 <phase_6+0xa7>
0x18a6:     8b 0c b4                        	mov ecx, dword ptr [rsp + rsi*4]
0x18a9:     b8 01 00 00 00                  	mov eax, 1
0x18ae:     48 8d 15 7b 29 20 00            	lea rdx, [rip + 0x20297b]
0x18b5:     83 f9 01                        	cmp ecx, 1
0x18b8:     7f d2                           	jg 0x188c <phase_6+0x70>
0x18ba:     eb db                           	jmp 0x1897 <phase_6+0x7b>
0x18bc:     be 00 00 00 00                  	mov esi, 0
0x18c1:     eb e3                           	jmp 0x18a6 <phase_6+0x8a>
0x18c3:     48 8b 5c 24 20                  	mov rbx, qword ptr [rsp + 0x20]
0x18c8:     48 8b 44 24 28                  	mov rax, qword ptr [rsp + 0x28]
0x18cd:     48 89 43 08                     	mov qword ptr [rbx + 8], rax
0x18d1:     48 8b 54 24 30                  	mov rdx, qword ptr [rsp + 0x30]
0x18d6:     48 89 50 08                     	mov qword ptr [rax + 8], rdx
0x18da:     48 8b 44 24 38                  	mov rax, qword ptr [rsp + 0x38]
0x18df:     48 89 42 08                     	mov qword ptr [rdx + 8], rax
0x18e3:     48 8b 54 24 40                  	mov rdx, qword ptr [rsp + 0x40]
0x18e8:     48 89 50 08                     	mov qword ptr [rax + 8], rdx
0x18ec:     48 8b 44 24 48                  	mov rax, qword ptr [rsp + 0x48]
0x18f1:     48 89 42 08                     	mov qword ptr [rdx + 8], rax
0x18f5:     48 c7 40 08 00 00 00 00         	mov qword ptr [rax + 8], 0
0x18fd:     bd 05 00 00 00                  	mov ebp, 5
0x1902:     eb 09                           	jmp 0x190d <phase_6+0xf1>
0x1904:     48 8b 5b 08                     	mov rbx, qword ptr [rbx + 8]
0x1908:     83 ed 01                        	sub ebp, 1
0x190b:     74 11                           	je 0x191e <phase_6+0x102>
0x190d:     48 8b 43 08                     	mov rax, qword ptr [rbx + 8]
0x1911:     8b 00                           	mov eax, dword ptr [rax]
0x1913:     39 03                           	cmp dword ptr [rbx], eax
0x1915:     7e ed                           	jle 0x1904 <phase_6+0xe8>
0x1917:     e8 5d 04 00 00                  	call 0x1d79 <explode_bomb>
0x191c:     eb e6                           	jmp 0x1904 <phase_6+0xe8>
0x191e:     48 8b 44 24 58                  	mov rax, qword ptr [rsp + 0x58]
0x1923:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x192c:     75 0b                           	jne 0x1939 <phase_6+0x11d>
0x192e:     48 83 c4 68                     	add rsp, 0x68
0x1932:     5b                              	pop rbx
0x1933:     5d                              	pop rbp
0x1934:     41 5c                           	pop r12
0x1936:     41 5d                           	pop r13
0x1938:     c3                              	ret 
0x1939:     e8 d2 f7 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: fun7 at 0x193e -- 0x197d
0x193e:     48 85 ff                        	test rdi, rdi
0x1941:     74 34                           	je 0x1977 <fun7+0x39>
0x1943:     48 83 ec 08                     	sub rsp, 8
0x1947:     8b 17                           	mov edx, dword ptr [rdi]
0x1949:     39 f2                           	cmp edx, esi
0x194b:     7f 0e                           	jg 0x195b <fun7+0x1d>
0x194d:     b8 00 00 00 00                  	mov eax, 0
0x1952:     39 f2                           	cmp edx, esi
0x1954:     75 12                           	jne 0x1968 <fun7+0x2a>
0x1956:     48 83 c4 08                     	add rsp, 8
0x195a:     c3                              	ret 
0x195b:     48 8b 7f 08                     	mov rdi, qword ptr [rdi + 8]
0x195f:     e8 da ff ff ff                  	call 0x193e <fun7>
0x1964:     01 c0                           	add eax, eax
0x1966:     eb ee                           	jmp 0x1956 <fun7+0x18>
0x1968:     48 8b 7f 10                     	mov rdi, qword ptr [rdi + 0x10]
0x196c:     e8 cd ff ff ff                  	call 0x193e <fun7>
0x1971:     8d 44 00 01                     	lea eax, [rax + rax + 1]
0x1975:     eb df                           	jmp 0x1956 <fun7+0x18>
0x1977:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x197c:     c3                              	ret 
; function: secret_phase at 0x197d -- 0x19d5
0x197d:     53                              	push rbx
0x197e:     e8 73 04 00 00                  	call 0x1df6 <read_line>
0x1983:     ba 0a 00 00 00                  	mov edx, 0xa
0x1988:     be 00 00 00 00                  	mov esi, 0
0x198d:     48 89 c7                        	mov rdi, rax
0x1990:     e8 fb f7 ff ff                  	call 0x1190 <strtol>
0x1995:     48 89 c3                        	mov rbx, rax
0x1998:     8d 40 ff                        	lea eax, [rax - 1]
0x199b:     3d e8 03 00 00                  	cmp eax, 0x3e8
0x19a0:     77 25                           	ja 0x19c7 <secret_phase+0x4a>
0x19a2:     89 de                           	mov esi, ebx
0x19a4:     48 8d 3d a5 27 20 00            	lea rdi, [rip + 0x2027a5]
0x19ab:     e8 8e ff ff ff                  	call 0x193e <fun7>
0x19b0:     85 c0                           	test eax, eax
0x19b2:     75 1a                           	jne 0x19ce <secret_phase+0x51>
0x19b4:     48 8d 3d 2d 14 00 00            	lea rdi, [rip + 0x142d]
0x19bb:     e8 30 f7 ff ff                  	call 0x10f0 <puts>
0x19c0:     e8 75 05 00 00                  	call 0x1f3a <phase_defused>
0x19c5:     5b                              	pop rbx
0x19c6:     c3                              	ret 
0x19c7:     e8 ad 03 00 00                  	call 0x1d79 <explode_bomb>
0x19cc:     eb d4                           	jmp 0x19a2 <secret_phase+0x25>
0x19ce:     e8 a6 03 00 00                  	call 0x1d79 <explode_bomb>
0x19d3:     eb df                           	jmp 0x19b4 <secret_phase+0x37>
; function: sig_handler at 0x19d5 -- 0x1a31
0x19d5:     48 83 ec 08                     	sub rsp, 8
0x19d9:     48 8d 3d a0 14 00 00            	lea rdi, [rip + 0x14a0]
0x19e0:     e8 0b f7 ff ff                  	call 0x10f0 <puts>
0x19e5:     bf 03 00 00 00                  	mov edi, 3
0x19ea:     e8 31 f8 ff ff                  	call 0x1220 <sleep>
0x19ef:     48 8d 35 53 16 00 00            	lea rsi, [rip + 0x1653]
0x19f6:     bf 01 00 00 00                  	mov edi, 1
0x19fb:     b8 00 00 00 00                  	mov eax, 0
0x1a00:     e8 bb f7 ff ff                  	call 0x11c0 <__printf_chk>
0x1a05:     48 8b 3d 74 2c 20 00            	mov rdi, qword ptr [rip + 0x202c74]
0x1a0c:     e8 8f f7 ff ff                  	call 0x11a0 <fflush>
0x1a11:     bf 01 00 00 00                  	mov edi, 1
0x1a16:     e8 05 f8 ff ff                  	call 0x1220 <sleep>
0x1a1b:     48 8d 3d 2f 16 00 00            	lea rdi, [rip + 0x162f]
0x1a22:     e8 c9 f6 ff ff                  	call 0x10f0 <puts>
0x1a27:     bf 10 00 00 00                  	mov edi, 0x10
0x1a2c:     e8 bf f7 ff ff                  	call 0x11f0 <exit>
; function: invalid_phase at 0x1a31 -- 0x1a58
0x1a31:     48 83 ec 08                     	sub rsp, 8
0x1a35:     48 89 fa                        	mov rdx, rdi
0x1a38:     48 8d 35 1a 16 00 00            	lea rsi, [rip + 0x161a]
0x1a3f:     bf 01 00 00 00                  	mov edi, 1
0x1a44:     b8 00 00 00 00                  	mov eax, 0
0x1a49:     e8 72 f7 ff ff                  	call 0x11c0 <__printf_chk>
0x1a4e:     bf 08 00 00 00                  	mov edi, 8
0x1a53:     e8 98 f7 ff ff                  	call 0x11f0 <exit>
; function: string_length at 0x1a58 -- 0x1a75
0x1a58:     80 3f 00                        	cmp byte ptr [rdi], 0
0x1a5b:     74 12                           	je 0x1a6f <string_length+0x17>
0x1a5d:     48 89 fa                        	mov rdx, rdi
0x1a60:     48 83 c2 01                     	add rdx, 1
0x1a64:     89 d0                           	mov eax, edx
0x1a66:     29 f8                           	sub eax, edi
0x1a68:     80 3a 00                        	cmp byte ptr [rdx], 0
0x1a6b:     75 f3                           	jne 0x1a60 <string_length+0x8>
0x1a6d:     f3 c3                           	ret 
0x1a6f:     b8 00 00 00 00                  	mov eax, 0
0x1a74:     c3                              	ret 
; function: strings_not_equal at 0x1a75 -- 0x1adc
0x1a75:     41 54                           	push r12
0x1a77:     55                              	push rbp
0x1a78:     53                              	push rbx
0x1a79:     48 89 fb                        	mov rbx, rdi
0x1a7c:     48 89 f5                        	mov rbp, rsi
0x1a7f:     e8 d4 ff ff ff                  	call 0x1a58 <string_length>
0x1a84:     41 89 c4                        	mov r12d, eax
0x1a87:     48 89 ef                        	mov rdi, rbp
0x1a8a:     e8 c9 ff ff ff                  	call 0x1a58 <string_length>
0x1a8f:     ba 01 00 00 00                  	mov edx, 1
0x1a94:     41 39 c4                        	cmp r12d, eax
0x1a97:     74 07                           	je 0x1aa0 <strings_not_equal+0x2b>
0x1a99:     89 d0                           	mov eax, edx
0x1a9b:     5b                              	pop rbx
0x1a9c:     5d                              	pop rbp
0x1a9d:     41 5c                           	pop r12
0x1a9f:     c3                              	ret 
0x1aa0:     0f b6 03                        	movzx eax, byte ptr [rbx]
0x1aa3:     84 c0                           	test al, al
0x1aa5:     74 27                           	je 0x1ace <strings_not_equal+0x59>
0x1aa7:     3a 45 00                        	cmp al, byte ptr [rbp]
0x1aaa:     75 29                           	jne 0x1ad5 <strings_not_equal+0x60>
0x1aac:     48 83 c3 01                     	add rbx, 1
0x1ab0:     48 83 c5 01                     	add rbp, 1
0x1ab4:     0f b6 03                        	movzx eax, byte ptr [rbx]
0x1ab7:     84 c0                           	test al, al
0x1ab9:     74 0c                           	je 0x1ac7 <strings_not_equal+0x52>
0x1abb:     38 45 00                        	cmp byte ptr [rbp], al
0x1abe:     74 ec                           	je 0x1aac <strings_not_equal+0x37>
0x1ac0:     ba 01 00 00 00                  	mov edx, 1
0x1ac5:     eb d2                           	jmp 0x1a99 <strings_not_equal+0x24>
0x1ac7:     ba 00 00 00 00                  	mov edx, 0
0x1acc:     eb cb                           	jmp 0x1a99 <strings_not_equal+0x24>
0x1ace:     ba 00 00 00 00                  	mov edx, 0
0x1ad3:     eb c4                           	jmp 0x1a99 <strings_not_equal+0x24>
0x1ad5:     ba 01 00 00 00                  	mov edx, 1
0x1ada:     eb bd                           	jmp 0x1a99 <strings_not_equal+0x24>
; function: initialize_bomb at 0x1adc -- 0x1bca
0x1adc:     55                              	push rbp
0x1add:     53                              	push rbx
0x1ade:     48 81 ec 58 20 00 00            	sub rsp, 0x2058
0x1ae5:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1aee:     48 89 84 24 48 20 00 00         	mov qword ptr [rsp + 0x2048], rax
0x1af6:     31 c0                           	xor eax, eax
0x1af8:     48 8d 35 d6 fe ff ff            	lea rsi, [rip - 0x12a]
0x1aff:     bf 02 00 00 00                  	mov edi, 2
0x1b04:     e8 57 f6 ff ff                  	call 0x1160 <signal>
0x1b09:     48 89 e7                        	mov rdi, rsp
0x1b0c:     be 40 00 00 00                  	mov esi, 0x40
0x1b11:     e8 ca f6 ff ff                  	call 0x11e0 <gethostname>
0x1b16:     85 c0                           	test eax, eax
0x1b18:     75 45                           	jne 0x1b5f <initialize_bomb+0x83>
0x1b1a:     48 8b 3d 5f 27 20 00            	mov rdi, qword ptr [rip + 0x20275f]
0x1b21:     48 8d 1d 60 27 20 00            	lea rbx, [rip + 0x202760]
0x1b28:     48 89 e5                        	mov rbp, rsp
0x1b2b:     48 85 ff                        	test rdi, rdi
0x1b2e:     74 19                           	je 0x1b49 <initialize_bomb+0x6d>
0x1b30:     48 89 ee                        	mov rsi, rbp
0x1b33:     e8 88 f5 ff ff                  	call 0x10c0 <strcasecmp>
0x1b38:     85 c0                           	test eax, eax
0x1b3a:     74 5e                           	je 0x1b9a <initialize_bomb+0xbe>
0x1b3c:     48 83 c3 08                     	add rbx, 8
0x1b40:     48 8b 7b f8                     	mov rdi, qword ptr [rbx - 8]
0x1b44:     48 85 ff                        	test rdi, rdi
0x1b47:     75 e7                           	jne 0x1b30 <initialize_bomb+0x54>
0x1b49:     48 8d 3d a0 13 00 00            	lea rdi, [rip + 0x13a0]
0x1b50:     e8 9b f5 ff ff                  	call 0x10f0 <puts>
0x1b55:     bf 08 00 00 00                  	mov edi, 8
0x1b5a:     e8 91 f6 ff ff                  	call 0x11f0 <exit>
0x1b5f:     48 8d 3d 52 13 00 00            	lea rdi, [rip + 0x1352]
0x1b66:     e8 85 f5 ff ff                  	call 0x10f0 <puts>
0x1b6b:     bf 08 00 00 00                  	mov edi, 8
0x1b70:     e8 7b f6 ff ff                  	call 0x11f0 <exit>
0x1b75:     48 8d 54 24 40                  	lea rdx, [rsp + 0x40]
0x1b7a:     48 8d 35 e9 14 00 00            	lea rsi, [rip + 0x14e9]
0x1b81:     bf 01 00 00 00                  	mov edi, 1
0x1b86:     b8 00 00 00 00                  	mov eax, 0
0x1b8b:     e8 30 f6 ff ff                  	call 0x11c0 <__printf_chk>
0x1b90:     bf 08 00 00 00                  	mov edi, 8
0x1b95:     e8 56 f6 ff ff                  	call 0x11f0 <exit>
0x1b9a:     48 8d 7c 24 40                  	lea rdi, [rsp + 0x40]
0x1b9f:     e8 b2 0d 00 00                  	call 0x2956 <init_driver>
0x1ba4:     85 c0                           	test eax, eax
0x1ba6:     78 cd                           	js 0x1b75 <initialize_bomb+0x99>
0x1ba8:     48 8b 84 24 48 20 00 00         	mov rax, qword ptr [rsp + 0x2048]
0x1bb0:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1bb9:     75 0a                           	jne 0x1bc5 <initialize_bomb+0xe9>
0x1bbb:     48 81 c4 58 20 00 00            	add rsp, 0x2058
0x1bc2:     5b                              	pop rbx
0x1bc3:     5d                              	pop rbp
0x1bc4:     c3                              	ret 
0x1bc5:     e8 46 f5 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: initialize_bomb_solve at 0x1bca -- 0x1bcc
0x1bca:     f3 c3                           	ret 
; function: blank_line at 0x1bcc -- 0x1c07
0x1bcc:     55                              	push rbp
0x1bcd:     53                              	push rbx
0x1bce:     48 83 ec 08                     	sub rsp, 8
0x1bd2:     48 89 fd                        	mov rbp, rdi
0x1bd5:     0f b6 5d 00                     	movzx ebx, byte ptr [rbp]
0x1bd9:     84 db                           	test bl, bl
0x1bdb:     74 1e                           	je 0x1bfb <blank_line+0x2f>
0x1bdd:     e8 4e f6 ff ff                  	call 0x1230 <__ctype_b_loc>
0x1be2:     48 83 c5 01                     	add rbp, 1
0x1be6:     48 0f be db                     	movsx rbx, bl
0x1bea:     48 8b 00                        	mov rax, qword ptr [rax]
0x1bed:     f6 44 58 01 20                  	test byte ptr [rax + rbx*2 + 1], 0x20
0x1bf2:     75 e1                           	jne 0x1bd5 <blank_line+0x9>
0x1bf4:     b8 00 00 00 00                  	mov eax, 0
0x1bf9:     eb 05                           	jmp 0x1c00 <blank_line+0x34>
0x1bfb:     b8 01 00 00 00                  	mov eax, 1
0x1c00:     48 83 c4 08                     	add rsp, 8
0x1c04:     5b                              	pop rbx
0x1c05:     5d                              	pop rbp
0x1c06:     c3                              	ret 
; function: skip at 0x1c07 -- 0x1c55
0x1c07:     55                              	push rbp
0x1c08:     53                              	push rbx
0x1c09:     48 83 ec 08                     	sub rsp, 8
0x1c0d:     48 8d 2d ac 2a 20 00            	lea rbp, [rip + 0x202aac]
0x1c14:     48 63 05 91 2a 20 00            	movsxd rax, dword ptr [rip + 0x202a91]
0x1c1b:     48 8d 3c 80                     	lea rdi, [rax + rax*4]
0x1c1f:     48 c1 e7 04                     	shl rdi, 4
0x1c23:     48 01 ef                        	add rdi, rbp
0x1c26:     48 8b 15 83 2a 20 00            	mov rdx, qword ptr [rip + 0x202a83]
0x1c2d:     be 50 00 00 00                  	mov esi, 0x50
0x1c32:     e8 19 f5 ff ff                  	call 0x1150 <fgets>
0x1c37:     48 89 c3                        	mov rbx, rax
0x1c3a:     48 85 c0                        	test rax, rax
0x1c3d:     74 0c                           	je 0x1c4b <skip+0x44>
0x1c3f:     48 89 c7                        	mov rdi, rax
0x1c42:     e8 85 ff ff ff                  	call 0x1bcc <blank_line>
0x1c47:     85 c0                           	test eax, eax
0x1c49:     75 c9                           	jne 0x1c14 <skip+0xd>
0x1c4b:     48 89 d8                        	mov rax, rbx
0x1c4e:     48 83 c4 08                     	add rsp, 8
0x1c52:     5b                              	pop rbx
0x1c53:     5d                              	pop rbp
0x1c54:     c3                              	ret 
; function: send_msg at 0x1c55 -- 0x1d79
0x1c55:     53                              	push rbx
0x1c56:     48 81 ec 10 40 00 00            	sub rsp, 0x4010
0x1c5d:     41 89 f8                        	mov r8d, edi
0x1c60:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1c69:     48 89 84 24 08 40 00 00         	mov qword ptr [rsp + 0x4008], rax
0x1c71:     31 c0                           	xor eax, eax
0x1c73:     8b 35 33 2a 20 00               	mov esi, dword ptr [rip + 0x202a33]
0x1c79:     8d 46 ff                        	lea eax, [rsi - 1]
0x1c7c:     48 98                           	cdqe 
0x1c7e:     48 8d 14 80                     	lea rdx, [rax + rax*4]
0x1c82:     48 c1 e2 04                     	shl rdx, 4
0x1c86:     48 8d 05 33 2a 20 00            	lea rax, [rip + 0x202a33]
0x1c8d:     48 01 c2                        	add rdx, rax
0x1c90:     48 c7 c1 ff ff ff ff            	mov rcx, -1
0x1c97:     b8 00 00 00 00                  	mov eax, 0
0x1c9c:     48 89 d7                        	mov rdi, rdx
0x1c9f:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x1ca1:     48 89 c8                        	mov rax, rcx
0x1ca4:     48 f7 d0                        	not rax
0x1ca7:     48 83 c0 63                     	add rax, 0x63
0x1cab:     48 3d 00 20 00 00               	cmp rax, 0x2000
0x1cb1:     0f 87 86 00 00 00               	ja 0x1d3d <send_msg+0xe8>
0x1cb7:     45 85 c0                        	test r8d, r8d
0x1cba:     4c 8d 0d c3 13 00 00            	lea r9, [rip + 0x13c3]
0x1cc1:     48 8d 05 c4 13 00 00            	lea rax, [rip + 0x13c4]
0x1cc8:     4c 0f 44 c8                     	cmove r9, rax
0x1ccc:     48 89 e3                        	mov rbx, rsp
0x1ccf:     52                              	push rdx
0x1cd0:     56                              	push rsi
0x1cd1:     44 8b 05 6c 24 20 00            	mov r8d, dword ptr [rip + 0x20246c]
0x1cd8:     48 8d 0d b6 13 00 00            	lea rcx, [rip + 0x13b6]
0x1cdf:     ba 00 20 00 00                  	mov edx, 0x2000
0x1ce4:     be 01 00 00 00                  	mov esi, 1
0x1ce9:     48 89 df                        	mov rdi, rbx
0x1cec:     b8 00 00 00 00                  	mov eax, 0
0x1cf1:     e8 4a f5 ff ff                  	call 0x1240 <__sprintf_chk>
0x1cf6:     4c 8d 84 24 10 20 00 00         	lea r8, [rsp + 0x2010]
0x1cfe:     b9 00 00 00 00                  	mov ecx, 0
0x1d03:     48 89 da                        	mov rdx, rbx
0x1d06:     48 8d 35 13 24 20 00            	lea rsi, [rip + 0x202413]
0x1d0d:     48 8d 3d 24 24 20 00            	lea rdi, [rip + 0x202424]
0x1d14:     e8 46 0e 00 00                  	call 0x2b5f <driver_post>
0x1d19:     48 83 c4 10                     	add rsp, 0x10
0x1d1d:     85 c0                           	test eax, eax
0x1d1f:     78 3c                           	js 0x1d5d <send_msg+0x108>
0x1d21:     48 8b 84 24 08 40 00 00         	mov rax, qword ptr [rsp + 0x4008]
0x1d29:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1d32:     75 40                           	jne 0x1d74 <send_msg+0x11f>
0x1d34:     48 81 c4 10 40 00 00            	add rsp, 0x4010
0x1d3b:     5b                              	pop rbx
0x1d3c:     c3                              	ret 
0x1d3d:     48 8d 35 e4 11 00 00            	lea rsi, [rip + 0x11e4]
0x1d44:     bf 01 00 00 00                  	mov edi, 1
0x1d49:     b8 00 00 00 00                  	mov eax, 0
0x1d4e:     e8 6d f4 ff ff                  	call 0x11c0 <__printf_chk>
0x1d53:     bf 08 00 00 00                  	mov edi, 8
0x1d58:     e8 93 f4 ff ff                  	call 0x11f0 <exit>
0x1d5d:     48 8d bc 24 00 20 00 00         	lea rdi, [rsp + 0x2000]
0x1d65:     e8 86 f3 ff ff                  	call 0x10f0 <puts>
0x1d6a:     bf 00 00 00 00                  	mov edi, 0
0x1d6f:     e8 7c f4 ff ff                  	call 0x11f0 <exit>
0x1d74:     e8 97 f3 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: explode_bomb at 0x1d79 -- 0x1db5
0x1d79:     48 83 ec 08                     	sub rsp, 8
0x1d7d:     48 8d 3d 1d 13 00 00            	lea rdi, [rip + 0x131d]
0x1d84:     e8 67 f3 ff ff                  	call 0x10f0 <puts>
0x1d89:     48 8d 3d 1a 13 00 00            	lea rdi, [rip + 0x131a]
0x1d90:     e8 5b f3 ff ff                  	call 0x10f0 <puts>
0x1d95:     bf 00 00 00 00                  	mov edi, 0
0x1d9a:     e8 b6 fe ff ff                  	call 0x1c55 <send_msg>
0x1d9f:     48 8d 3d aa 11 00 00            	lea rdi, [rip + 0x11aa]
0x1da6:     e8 45 f3 ff ff                  	call 0x10f0 <puts>
0x1dab:     bf 08 00 00 00                  	mov edi, 8
0x1db0:     e8 3b f4 ff ff                  	call 0x11f0 <exit>
; function: read_six_numbers at 0x1db5 -- 0x1df6
0x1db5:     48 83 ec 08                     	sub rsp, 8
0x1db9:     48 89 f2                        	mov rdx, rsi
0x1dbc:     48 8d 4e 04                     	lea rcx, [rsi + 4]
0x1dc0:     48 8d 46 14                     	lea rax, [rsi + 0x14]
0x1dc4:     50                              	push rax
0x1dc5:     48 8d 46 10                     	lea rax, [rsi + 0x10]
0x1dc9:     50                              	push rax
0x1dca:     4c 8d 4e 0c                     	lea r9, [rsi + 0xc]
0x1dce:     4c 8d 46 08                     	lea r8, [rsi + 8]
0x1dd2:     48 8d 35 e8 12 00 00            	lea rsi, [rip + 0x12e8]
0x1dd9:     b8 00 00 00 00                  	mov eax, 0
0x1dde:     e8 cd f3 ff ff                  	call 0x11b0 <sscanf>
0x1de3:     48 83 c4 10                     	add rsp, 0x10
0x1de7:     83 f8 05                        	cmp eax, 5
0x1dea:     7e 05                           	jle 0x1df1 <read_six_numbers+0x3c>
0x1dec:     48 83 c4 08                     	add rsp, 8
0x1df0:     c3                              	ret 
0x1df1:     e8 83 ff ff ff                  	call 0x1d79 <explode_bomb>
; function: read_line at 0x1df6 -- 0x1f3a
0x1df6:     48 83 ec 08                     	sub rsp, 8
0x1dfa:     b8 00 00 00 00                  	mov eax, 0
0x1dff:     e8 03 fe ff ff                  	call 0x1c07 <skip>
0x1e04:     48 85 c0                        	test rax, rax
0x1e07:     74 6f                           	je 0x1e78 <read_line+0x82>
0x1e09:     8b 35 9d 28 20 00               	mov esi, dword ptr [rip + 0x20289d]
0x1e0f:     48 63 c6                        	movsxd rax, esi
0x1e12:     48 8d 14 80                     	lea rdx, [rax + rax*4]
0x1e16:     48 c1 e2 04                     	shl rdx, 4
0x1e1a:     48 8d 05 9f 28 20 00            	lea rax, [rip + 0x20289f]
0x1e21:     48 01 c2                        	add rdx, rax
0x1e24:     48 c7 c1 ff ff ff ff            	mov rcx, -1
0x1e2b:     b8 00 00 00 00                  	mov eax, 0
0x1e30:     48 89 d7                        	mov rdi, rdx
0x1e33:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x1e35:     48 f7 d1                        	not rcx
0x1e38:     48 83 e9 01                     	sub rcx, 1
0x1e3c:     83 f9 4e                        	cmp ecx, 0x4e
0x1e3f:     0f 8f ab 00 00 00               	jg 0x1ef0 <read_line+0xfa>
0x1e45:     83 e9 01                        	sub ecx, 1
0x1e48:     48 63 c9                        	movsxd rcx, ecx
0x1e4b:     48 63 c6                        	movsxd rax, esi
0x1e4e:     48 8d 04 80                     	lea rax, [rax + rax*4]
0x1e52:     48 c1 e0 04                     	shl rax, 4
0x1e56:     48 89 c7                        	mov rdi, rax
0x1e59:     48 8d 05 60 28 20 00            	lea rax, [rip + 0x202860]
0x1e60:     48 01 f8                        	add rax, rdi
0x1e63:     c6 04 08 00                     	mov byte ptr [rax + rcx], 0
0x1e67:     83 c6 01                        	add esi, 1
0x1e6a:     89 35 3c 28 20 00               	mov dword ptr [rip + 0x20283c], esi
0x1e70:     48 89 d0                        	mov rax, rdx
0x1e73:     48 83 c4 08                     	add rsp, 8
0x1e77:     c3                              	ret 
0x1e78:     48 8b 05 11 28 20 00            	mov rax, qword ptr [rip + 0x202811]
0x1e7f:     48 39 05 2a 28 20 00            	cmp qword ptr [rip + 0x20282a], rax
0x1e86:     74 1b                           	je 0x1ea3 <read_line+0xad>
0x1e88:     48 8d 3d 62 12 00 00            	lea rdi, [rip + 0x1262]
0x1e8f:     e8 1c f2 ff ff                  	call 0x10b0 <getenv>
0x1e94:     48 85 c0                        	test rax, rax
0x1e97:     74 20                           	je 0x1eb9 <read_line+0xc3>
0x1e99:     bf 00 00 00 00                  	mov edi, 0
0x1e9e:     e8 4d f3 ff ff                  	call 0x11f0 <exit>
0x1ea3:     48 8d 3d 29 12 00 00            	lea rdi, [rip + 0x1229]
0x1eaa:     e8 41 f2 ff ff                  	call 0x10f0 <puts>
0x1eaf:     bf 08 00 00 00                  	mov edi, 8
0x1eb4:     e8 37 f3 ff ff                  	call 0x11f0 <exit>
0x1eb9:     48 8b 05 d0 27 20 00            	mov rax, qword ptr [rip + 0x2027d0]
0x1ec0:     48 89 05 e9 27 20 00            	mov qword ptr [rip + 0x2027e9], rax
0x1ec7:     b8 00 00 00 00                  	mov eax, 0
0x1ecc:     e8 36 fd ff ff                  	call 0x1c07 <skip>
0x1ed1:     48 85 c0                        	test rax, rax
0x1ed4:     0f 85 2f ff ff ff               	jne 0x1e09 <read_line+0x13>
0x1eda:     48 8d 3d f2 11 00 00            	lea rdi, [rip + 0x11f2]
0x1ee1:     e8 0a f2 ff ff                  	call 0x10f0 <puts>
0x1ee6:     bf 00 00 00 00                  	mov edi, 0
0x1eeb:     e8 00 f3 ff ff                  	call 0x11f0 <exit>
0x1ef0:     48 8d 3d 05 12 00 00            	lea rdi, [rip + 0x1205]
0x1ef7:     e8 f4 f1 ff ff                  	call 0x10f0 <puts>
0x1efc:     8b 05 aa 27 20 00               	mov eax, dword ptr [rip + 0x2027aa]
0x1f02:     8d 50 01                        	lea edx, [rax + 1]
0x1f05:     89 15 a1 27 20 00               	mov dword ptr [rip + 0x2027a1], edx
0x1f0b:     48 98                           	cdqe 
0x1f0d:     48 6b c0 50                     	imul rax, rax, 0x50
0x1f11:     48 8d 15 a8 27 20 00            	lea rdx, [rip + 0x2027a8]
0x1f18:     48 be 2a 2a 2a 74 72 75 6e 63   	movabs rsi, 0x636e7572742a2a2a
0x1f22:     48 bf 61 74 65 64 2a 2a 2a 00   	movabs rdi, 0x2a2a2a64657461
0x1f2c:     48 89 34 02                     	mov qword ptr [rdx + rax], rsi
0x1f30:     48 89 7c 02 08                  	mov qword ptr [rdx + rax + 8], rdi
0x1f35:     e8 3f fe ff ff                  	call 0x1d79 <explode_bomb>
; function: phase_defused at 0x1f3a -- 0x1ffe
0x1f3a:     48 83 ec 78                     	sub rsp, 0x78
0x1f3e:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x1f47:     48 89 44 24 68                  	mov qword ptr [rsp + 0x68], rax
0x1f4c:     31 c0                           	xor eax, eax
0x1f4e:     bf 01 00 00 00                  	mov edi, 1
0x1f53:     e8 fd fc ff ff                  	call 0x1c55 <send_msg>
0x1f58:     83 3d 4d 27 20 00 06            	cmp dword ptr [rip + 0x20274d], 6
0x1f5f:     74 19                           	je 0x1f7a <phase_defused+0x40>
0x1f61:     48 8b 44 24 68                  	mov rax, qword ptr [rsp + 0x68]
0x1f66:     64 48 33 04 25 28 00 00 00      	xor rax, qword ptr fs:[0x28]
0x1f6f:     0f 85 84 00 00 00               	jne 0x1ff9 <phase_defused+0xbf>
0x1f75:     48 83 c4 78                     	add rsp, 0x78
0x1f79:     c3                              	ret 
0x1f7a:     48 8d 4c 24 0c                  	lea rcx, [rsp + 0xc]
0x1f7f:     48 8d 54 24 08                  	lea rdx, [rsp + 8]
0x1f84:     4c 8d 44 24 10                  	lea r8, [rsp + 0x10]
0x1f89:     48 8d 35 87 11 00 00            	lea rsi, [rip + 0x1187]
0x1f90:     48 8d 3d 19 28 20 00            	lea rdi, [rip + 0x202819]
0x1f97:     b8 00 00 00 00                  	mov eax, 0
0x1f9c:     e8 0f f2 ff ff                  	call 0x11b0 <sscanf>
0x1fa1:     83 f8 03                        	cmp eax, 3
0x1fa4:     74 1a                           	je 0x1fc0 <phase_defused+0x86>
0x1fa6:     48 8d 3d 2b 10 00 00            	lea rdi, [rip + 0x102b]
0x1fad:     e8 3e f1 ff ff                  	call 0x10f0 <puts>
0x1fb2:     48 8d 3d 4f 10 00 00            	lea rdi, [rip + 0x104f]
0x1fb9:     e8 32 f1 ff ff                  	call 0x10f0 <puts>
0x1fbe:     eb a1                           	jmp 0x1f61 <phase_defused+0x27>
0x1fc0:     48 8d 7c 24 10                  	lea rdi, [rsp + 0x10]
0x1fc5:     48 8d 35 54 11 00 00            	lea rsi, [rip + 0x1154]
0x1fcc:     e8 a4 fa ff ff                  	call 0x1a75 <strings_not_equal>
0x1fd1:     85 c0                           	test eax, eax
0x1fd3:     75 d1                           	jne 0x1fa6 <phase_defused+0x6c>
0x1fd5:     48 8d 3d 9c 0f 00 00            	lea rdi, [rip + 0xf9c]
0x1fdc:     e8 0f f1 ff ff                  	call 0x10f0 <puts>
0x1fe1:     48 8d 3d b8 0f 00 00            	lea rdi, [rip + 0xfb8]
0x1fe8:     e8 03 f1 ff ff                  	call 0x10f0 <puts>
0x1fed:     b8 00 00 00 00                  	mov eax, 0
0x1ff2:     e8 86 f9 ff ff                  	call 0x197d <secret_phase>
0x1ff7:     eb ad                           	jmp 0x1fa6 <phase_defused+0x6c>
0x1ff9:     e8 12 f1 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: sigalrm_handler at 0x1ffe -- 0x202e
0x1ffe:     48 83 ec 08                     	sub rsp, 8
0x2002:     b9 00 00 00 00                  	mov ecx, 0
0x2007:     48 8d 15 4a 13 00 00            	lea rdx, [rip + 0x134a]
0x200e:     be 01 00 00 00                  	mov esi, 1
0x2013:     48 8b 3d 86 26 20 00            	mov rdi, qword ptr [rip + 0x202686]
0x201a:     b8 00 00 00 00                  	mov eax, 0
0x201f:     e8 ec f1 ff ff                  	call 0x1210 <__fprintf_chk>
0x2024:     bf 01 00 00 00                  	mov edi, 1
0x2029:     e8 c2 f1 ff ff                  	call 0x11f0 <exit>
; function: rio_readlineb at 0x202e -- 0x20ea
0x202e:     41 56                           	push r14
0x2030:     41 55                           	push r13
0x2032:     41 54                           	push r12
0x2034:     55                              	push rbp
0x2035:     53                              	push rbx
0x2036:     48 89 fb                        	mov rbx, rdi
0x2039:     49 89 f4                        	mov r12, rsi
0x203c:     49 89 d6                        	mov r14, rdx
0x203f:     41 bd 01 00 00 00               	mov r13d, 1
0x2045:     48 8d 6f 10                     	lea rbp, [rdi + 0x10]
0x2049:     48 83 fa 01                     	cmp rdx, 1
0x204d:     77 0c                           	ja 0x205b <rio_readlineb+0x2d>
0x204f:     eb 60                           	jmp 0x20b1 <rio_readlineb+0x83>
0x2051:     e8 7a f0 ff ff                  	call 0x10d0 <__errno_location>
0x2056:     83 38 04                        	cmp dword ptr [rax], 4
0x2059:     75 67                           	jne 0x20c2 <rio_readlineb+0x94>
0x205b:     8b 43 04                        	mov eax, dword ptr [rbx + 4]
0x205e:     85 c0                           	test eax, eax
0x2060:     7f 20                           	jg 0x2082 <rio_readlineb+0x54>
0x2062:     ba 00 20 00 00                  	mov edx, 0x2000
0x2067:     48 89 ee                        	mov rsi, rbp
0x206a:     8b 3b                           	mov edi, dword ptr [rbx]
0x206c:     e8 cf f0 ff ff                  	call 0x1140 <read>
0x2071:     89 43 04                        	mov dword ptr [rbx + 4], eax
0x2074:     85 c0                           	test eax, eax
0x2076:     78 d9                           	js 0x2051 <rio_readlineb+0x23>
0x2078:     85 c0                           	test eax, eax
0x207a:     74 4f                           	je 0x20cb <rio_readlineb+0x9d>
0x207c:     48 89 6b 08                     	mov qword ptr [rbx + 8], rbp
0x2080:     eb d9                           	jmp 0x205b <rio_readlineb+0x2d>
0x2082:     48 8b 53 08                     	mov rdx, qword ptr [rbx + 8]
0x2086:     0f b6 0a                        	movzx ecx, byte ptr [rdx]
0x2089:     48 83 c2 01                     	add rdx, 1
0x208d:     48 89 53 08                     	mov qword ptr [rbx + 8], rdx
0x2091:     83 e8 01                        	sub eax, 1
0x2094:     89 43 04                        	mov dword ptr [rbx + 4], eax
0x2097:     49 83 c4 01                     	add r12, 1
0x209b:     41 88 4c 24 ff                  	mov byte ptr [r12 - 1], cl
0x20a0:     80 f9 0a                        	cmp cl, 0xa
0x20a3:     74 0c                           	je 0x20b1 <rio_readlineb+0x83>
0x20a5:     41 83 c5 01                     	add r13d, 1
0x20a9:     49 63 c5                        	movsxd rax, r13d
0x20ac:     4c 39 f0                        	cmp rax, r14
0x20af:     72 aa                           	jb 0x205b <rio_readlineb+0x2d>
0x20b1:     41 c6 04 24 00                  	mov byte ptr [r12], 0
0x20b6:     49 63 c5                        	movsxd rax, r13d
0x20b9:     5b                              	pop rbx
0x20ba:     5d                              	pop rbp
0x20bb:     41 5c                           	pop r12
0x20bd:     41 5d                           	pop r13
0x20bf:     41 5e                           	pop r14
0x20c1:     c3                              	ret 
0x20c2:     48 c7 c0 ff ff ff ff            	mov rax, -1
0x20c9:     eb 05                           	jmp 0x20d0 <rio_readlineb+0xa2>
0x20cb:     b8 00 00 00 00                  	mov eax, 0
0x20d0:     85 c0                           	test eax, eax
0x20d2:     75 0d                           	jne 0x20e1 <rio_readlineb+0xb3>
0x20d4:     b8 00 00 00 00                  	mov eax, 0
0x20d9:     41 83 fd 01                     	cmp r13d, 1
0x20dd:     75 d2                           	jne 0x20b1 <rio_readlineb+0x83>
0x20df:     eb d8                           	jmp 0x20b9 <rio_readlineb+0x8b>
0x20e1:     48 c7 c0 ff ff ff ff            	mov rax, -1
0x20e8:     eb cf                           	jmp 0x20b9 <rio_readlineb+0x8b>
; function: submitr at 0x20ea -- 0x292b
0x20ea:     41 57                           	push r15
0x20ec:     41 56                           	push r14
0x20ee:     41 55                           	push r13
0x20f0:     41 54                           	push r12
0x20f2:     55                              	push rbp
0x20f3:     53                              	push rbx
0x20f4:     48 81 ec 78 a0 00 00            	sub rsp, 0xa078
0x20fb:     49 89 fd                        	mov r13, rdi
0x20fe:     89 f5                           	mov ebp, esi
0x2100:     48 89 54 24 08                  	mov qword ptr [rsp + 8], rdx
0x2105:     48 89 4c 24 10                  	mov qword ptr [rsp + 0x10], rcx
0x210a:     4c 89 44 24 20                  	mov qword ptr [rsp + 0x20], r8
0x210f:     4c 89 4c 24 18                  	mov qword ptr [rsp + 0x18], r9
0x2114:     48 8b 9c 24 b0 a0 00 00         	mov rbx, qword ptr [rsp + 0xa0b0]
0x211c:     4c 8b bc 24 b8 a0 00 00         	mov r15, qword ptr [rsp + 0xa0b8]
0x2124:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x212d:     48 89 84 24 68 a0 00 00         	mov qword ptr [rsp + 0xa068], rax
0x2135:     31 c0                           	xor eax, eax
0x2137:     c7 44 24 3c 00 00 00 00         	mov dword ptr [rsp + 0x3c], 0
0x213f:     ba 00 00 00 00                  	mov edx, 0
0x2144:     be 01 00 00 00                  	mov esi, 1
0x2149:     bf 02 00 00 00                  	mov edi, 2
0x214e:     e8 fd f0 ff ff                  	call 0x1250 <socket>
0x2153:     85 c0                           	test eax, eax
0x2155:     0f 88 35 01 00 00               	js 0x2290 <submitr+0x1a6>
0x215b:     41 89 c4                        	mov r12d, eax
0x215e:     4c 89 ef                        	mov rdi, r13
0x2161:     e8 0a f0 ff ff                  	call 0x1170 <gethostbyname>
0x2166:     48 85 c0                        	test rax, rax
0x2169:     0f 84 71 01 00 00               	je 0x22e0 <submitr+0x1f6>
0x216f:     4c 8d 6c 24 40                  	lea r13, [rsp + 0x40]
0x2174:     48 c7 44 24 42 00 00 00 00      	mov qword ptr [rsp + 0x42], 0
0x217d:     c7 44 24 4a 00 00 00 00         	mov dword ptr [rsp + 0x4a], 0
0x2185:     66 c7 44 24 4e 00 00            	mov word ptr [rsp + 0x4e], 0
0x218c:     66 c7 44 24 40 02 00            	mov word ptr [rsp + 0x40], 2
0x2193:     48 63 50 14                     	movsxd rdx, dword ptr [rax + 0x14]
0x2197:     48 8b 40 18                     	mov rax, qword ptr [rax + 0x18]
0x219b:     48 8d 7c 24 44                  	lea rdi, [rsp + 0x44]
0x21a0:     b9 0c 00 00 00                  	mov ecx, 0xc
0x21a5:     48 8b 30                        	mov rsi, qword ptr [rax]
0x21a8:     e8 d3 ef ff ff                  	call 0x1180 <__memmove_chk>
0x21ad:     66 c1 cd 08                     	ror bp, 8
0x21b1:     66 89 6c 24 42                  	mov word ptr [rsp + 0x42], bp
0x21b6:     ba 10 00 00 00                  	mov edx, 0x10
0x21bb:     4c 89 ee                        	mov rsi, r13
0x21be:     44 89 e7                        	mov edi, r12d
0x21c1:     e8 3a f0 ff ff                  	call 0x1200 <connect>
0x21c6:     85 c0                           	test eax, eax
0x21c8:     0f 88 7d 01 00 00               	js 0x234b <submitr+0x261>
0x21ce:     49 c7 c1 ff ff ff ff            	mov r9, -1
0x21d5:     b8 00 00 00 00                  	mov eax, 0
0x21da:     4c 89 c9                        	mov rcx, r9
0x21dd:     48 89 df                        	mov rdi, rbx
0x21e0:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x21e2:     48 89 ce                        	mov rsi, rcx
0x21e5:     48 f7 d6                        	not rsi
0x21e8:     4c 89 c9                        	mov rcx, r9
0x21eb:     48 8b 7c 24 08                  	mov rdi, qword ptr [rsp + 8]
0x21f0:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x21f2:     49 89 c8                        	mov r8, rcx
0x21f5:     4c 89 c9                        	mov rcx, r9
0x21f8:     48 8b 7c 24 10                  	mov rdi, qword ptr [rsp + 0x10]
0x21fd:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x21ff:     48 89 ca                        	mov rdx, rcx
0x2202:     48 f7 d2                        	not rdx
0x2205:     4c 89 c9                        	mov rcx, r9
0x2208:     48 8b 7c 24 18                  	mov rdi, qword ptr [rsp + 0x18]
0x220d:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x220f:     4c 29 c2                        	sub rdx, r8
0x2212:     48 29 ca                        	sub rdx, rcx
0x2215:     48 8d 44 76 fd                  	lea rax, [rsi + rsi*2 - 3]
0x221a:     48 8d 44 02 7b                  	lea rax, [rdx + rax + 0x7b]
0x221f:     48 3d 00 20 00 00               	cmp rax, 0x2000
0x2225:     0f 87 7d 01 00 00               	ja 0x23a8 <submitr+0x2be>
0x222b:     48 8d 94 24 60 40 00 00         	lea rdx, [rsp + 0x4060]
0x2233:     b9 00 04 00 00                  	mov ecx, 0x400
0x2238:     b8 00 00 00 00                  	mov eax, 0
0x223d:     48 89 d7                        	mov rdi, rdx
0x2240:     f3 48 ab                        	rep stosq qword ptr [rdi], rax
0x2243:     48 c7 c1 ff ff ff ff            	mov rcx, -1
0x224a:     48 89 df                        	mov rdi, rbx
0x224d:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x224f:     48 89 ca                        	mov rdx, rcx
0x2252:     48 f7 d2                        	not rdx
0x2255:     48 89 d1                        	mov rcx, rdx
0x2258:     48 83 e9 01                     	sub rcx, 1
0x225c:     85 c9                           	test ecx, ecx
0x225e:     0f 84 3f 06 00 00               	je 0x28a3 <submitr+0x7b9>
0x2264:     8d 41 ff                        	lea eax, [rcx - 1]
0x2267:     4c 8d 74 03 01                  	lea r14, [rbx + rax + 1]
0x226c:     48 8d ac 24 60 40 00 00         	lea rbp, [rsp + 0x4060]
0x2274:     48 8d 84 24 60 80 00 00         	lea rax, [rsp + 0x8060]
0x227c:     48 89 44 24 28                  	mov qword ptr [rsp + 0x28], rax
0x2281:     49 bd d9 ff 00 00 00 00 20 00   	movabs r13, 0x2000000000ffd9
0x228b:     e9 a6 01 00 00                  	jmp 0x2436 <submitr+0x34c>
0x2290:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x229a:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x22a4:     49 89 07                        	mov qword ptr [r15], rax
0x22a7:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x22ab:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x22b5:     48 ba 63 72 65 61 74 65 20 73   	movabs rdx, 0x7320657461657263
0x22bf:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x22c3:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x22c7:     41 c7 47 20 6f 63 6b 65         	mov dword ptr [r15 + 0x20], 0x656b636f
0x22cf:     66 41 c7 47 24 74 00            	mov word ptr [r15 + 0x24], 0x74
0x22d6:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x22db:     e9 9a 04 00 00                  	jmp 0x277a <submitr+0x690>
0x22e0:     48 b8 45 72 72 6f 72 3a 20 44   	movabs rax, 0x44203a726f727245
0x22ea:     48 ba 4e 53 20 69 73 20 75 6e   	movabs rdx, 0x6e7520736920534e
0x22f4:     49 89 07                        	mov qword ptr [r15], rax
0x22f7:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x22fb:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x2305:     48 ba 72 65 73 6f 6c 76 65 20   	movabs rdx, 0x2065766c6f736572
0x230f:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2313:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2317:     48 b8 73 65 72 76 65 72 20 61   	movabs rax, 0x6120726576726573
0x2321:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2325:     41 c7 47 28 64 64 72 65         	mov dword ptr [r15 + 0x28], 0x65726464
0x232d:     66 41 c7 47 2c 73 73            	mov word ptr [r15 + 0x2c], 0x7373
0x2334:     41 c6 47 2e 00                  	mov byte ptr [r15 + 0x2e], 0
0x2339:     44 89 e7                        	mov edi, r12d
0x233c:     e8 ef ed ff ff                  	call 0x1130 <close>
0x2341:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2346:     e9 2f 04 00 00                  	jmp 0x277a <submitr+0x690>
0x234b:     48 b8 45 72 72 6f 72 3a 20 55   	movabs rax, 0x55203a726f727245
0x2355:     48 ba 6e 61 62 6c 65 20 74 6f   	movabs rdx, 0x6f7420656c62616e
0x235f:     49 89 07                        	mov qword ptr [r15], rax
0x2362:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2366:     48 b8 20 63 6f 6e 6e 65 63 74   	movabs rax, 0x7463656e6e6f6320
0x2370:     48 ba 20 74 6f 20 74 68 65 20   	movabs rdx, 0x20656874206f7420
0x237a:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x237e:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2382:     41 c7 47 20 73 65 72 76         	mov dword ptr [r15 + 0x20], 0x76726573
0x238a:     66 41 c7 47 24 65 72            	mov word ptr [r15 + 0x24], 0x7265
0x2391:     41 c6 47 26 00                  	mov byte ptr [r15 + 0x26], 0
0x2396:     44 89 e7                        	mov edi, r12d
0x2399:     e8 92 ed ff ff                  	call 0x1130 <close>
0x239e:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x23a3:     e9 d2 03 00 00                  	jmp 0x277a <submitr+0x690>
0x23a8:     48 b8 45 72 72 6f 72 3a 20 52   	movabs rax, 0x52203a726f727245
0x23b2:     48 ba 65 73 75 6c 74 20 73 74   	movabs rdx, 0x747320746c757365
0x23bc:     49 89 07                        	mov qword ptr [r15], rax
0x23bf:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x23c3:     48 b8 72 69 6e 67 20 74 6f 6f   	movabs rax, 0x6f6f7420676e6972
0x23cd:     48 ba 20 6c 61 72 67 65 2e 20   	movabs rdx, 0x202e656772616c20
0x23d7:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x23db:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x23df:     48 b8 49 6e 63 72 65 61 73 65   	movabs rax, 0x6573616572636e49
0x23e9:     48 ba 20 53 55 42 4d 49 54 52   	movabs rdx, 0x5254494d42555320
0x23f3:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x23f7:     49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x23fb:     48 b8 5f 4d 41 58 42 55 46 00   	movabs rax, 0x46554258414d5f
0x2405:     49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x2409:     44 89 e7                        	mov edi, r12d
0x240c:     e8 1f ed ff ff                  	call 0x1130 <close>
0x2411:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2416:     e9 5f 03 00 00                  	jmp 0x277a <submitr+0x690>
0x241b:     49 0f a3 c5                     	bt r13, rax
0x241f:     73 21                           	jae 0x2442 <submitr+0x358>
0x2421:     44 88 45 00                     	mov byte ptr [rbp], r8b
0x2425:     48 8d 6d 01                     	lea rbp, [rbp + 1]
0x2429:     48 83 c3 01                     	add rbx, 1
0x242d:     4c 39 f3                        	cmp rbx, r14
0x2430:     0f 84 6d 04 00 00               	je 0x28a3 <submitr+0x7b9>
0x2436:     44 0f b6 03                     	movzx r8d, byte ptr [rbx]
0x243a:     41 8d 40 d6                     	lea eax, [r8 - 0x2a]
0x243e:     3c 35                           	cmp al, 0x35
0x2440:     76 d9                           	jbe 0x241b <submitr+0x331>
0x2442:     44 89 c0                        	mov eax, r8d
0x2445:     83 e0 df                        	and eax, 0xffffffdf
0x2448:     83 e8 41                        	sub eax, 0x41
0x244b:     3c 19                           	cmp al, 0x19
0x244d:     76 d2                           	jbe 0x2421 <submitr+0x337>
0x244f:     41 80 f8 20                     	cmp r8b, 0x20
0x2453:     74 60                           	je 0x24b5 <submitr+0x3cb>
0x2455:     41 8d 40 e0                     	lea eax, [r8 - 0x20]
0x2459:     3c 5f                           	cmp al, 0x5f
0x245b:     76 0a                           	jbe 0x2467 <submitr+0x37d>
0x245d:     41 80 f8 09                     	cmp r8b, 9
0x2461:     0f 85 af 03 00 00               	jne 0x2816 <submitr+0x72c>
0x2467:     45 0f b6 c0                     	movzx r8d, r8b
0x246b:     48 8d 0d be 0f 00 00            	lea rcx, [rip + 0xfbe]
0x2472:     ba 08 00 00 00                  	mov edx, 8
0x2477:     be 01 00 00 00                  	mov esi, 1
0x247c:     48 8b 7c 24 28                  	mov rdi, qword ptr [rsp + 0x28]
0x2481:     b8 00 00 00 00                  	mov eax, 0
0x2486:     e8 b5 ed ff ff                  	call 0x1240 <__sprintf_chk>
0x248b:     0f b6 84 24 60 80 00 00         	movzx eax, byte ptr [rsp + 0x8060]
0x2493:     88 45 00                        	mov byte ptr [rbp], al
0x2496:     0f b6 84 24 61 80 00 00         	movzx eax, byte ptr [rsp + 0x8061]
0x249e:     88 45 01                        	mov byte ptr [rbp + 1], al
0x24a1:     0f b6 84 24 62 80 00 00         	movzx eax, byte ptr [rsp + 0x8062]
0x24a9:     88 45 02                        	mov byte ptr [rbp + 2], al
0x24ac:     48 8d 6d 03                     	lea rbp, [rbp + 3]
0x24b0:     e9 74 ff ff ff                  	jmp 0x2429 <submitr+0x33f>
0x24b5:     c6 45 00 2b                     	mov byte ptr [rbp], 0x2b
0x24b9:     48 8d 6d 01                     	lea rbp, [rbp + 1]
0x24bd:     e9 67 ff ff ff                  	jmp 0x2429 <submitr+0x33f>
0x24c2:     49 01 c5                        	add r13, rax
0x24c5:     48 29 c5                        	sub rbp, rax
0x24c8:     74 26                           	je 0x24f0 <submitr+0x406>
0x24ca:     48 89 ea                        	mov rdx, rbp
0x24cd:     4c 89 ee                        	mov rsi, r13
0x24d0:     44 89 e7                        	mov edi, r12d
0x24d3:     e8 28 ec ff ff                  	call 0x1100 <write>
0x24d8:     48 85 c0                        	test rax, rax
0x24db:     7f e5                           	jg 0x24c2 <submitr+0x3d8>
0x24dd:     e8 ee eb ff ff                  	call 0x10d0 <__errno_location>
0x24e2:     83 38 04                        	cmp dword ptr [rax], 4
0x24e5:     0f 85 31 01 00 00               	jne 0x261c <submitr+0x532>
0x24eb:     4c 89 f0                        	mov rax, r14
0x24ee:     eb d2                           	jmp 0x24c2 <submitr+0x3d8>
0x24f0:     48 85 db                        	test rbx, rbx
0x24f3:     0f 88 23 01 00 00               	js 0x261c <submitr+0x532>
0x24f9:     44 89 64 24 50                  	mov dword ptr [rsp + 0x50], r12d
0x24fe:     c7 44 24 54 00 00 00 00         	mov dword ptr [rsp + 0x54], 0
0x2506:     48 8d 7c 24 50                  	lea rdi, [rsp + 0x50]
0x250b:     48 8d 47 10                     	lea rax, [rdi + 0x10]
0x250f:     48 89 44 24 58                  	mov qword ptr [rsp + 0x58], rax
0x2514:     48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x251c:     ba 00 20 00 00                  	mov edx, 0x2000
0x2521:     e8 08 fb ff ff                  	call 0x202e <rio_readlineb>
0x2526:     48 85 c0                        	test rax, rax
0x2529:     0f 8e 4c 01 00 00               	jle 0x267b <submitr+0x591>
0x252f:     48 8d 4c 24 3c                  	lea rcx, [rsp + 0x3c]
0x2534:     48 8d 94 24 60 60 00 00         	lea rdx, [rsp + 0x6060]
0x253c:     48 8d bc 24 60 20 00 00         	lea rdi, [rsp + 0x2060]
0x2544:     4c 8d 84 24 60 80 00 00         	lea r8, [rsp + 0x8060]
0x254c:     48 8d 35 e4 0e 00 00            	lea rsi, [rip + 0xee4]
0x2553:     b8 00 00 00 00                  	mov eax, 0
0x2558:     e8 53 ec ff ff                  	call 0x11b0 <sscanf>
0x255d:     44 8b 44 24 3c                  	mov r8d, dword ptr [rsp + 0x3c]
0x2562:     41 81 f8 c8 00 00 00            	cmp r8d, 0xc8
0x2569:     0f 85 80 01 00 00               	jne 0x26ef <submitr+0x605>
0x256f:     48 8d 9c 24 60 20 00 00         	lea rbx, [rsp + 0x2060]
0x2577:     48 8d 2d ca 0e 00 00            	lea rbp, [rip + 0xeca]
0x257e:     4c 8d 6c 24 50                  	lea r13, [rsp + 0x50]
0x2583:     b9 03 00 00 00                  	mov ecx, 3
0x2588:     48 89 de                        	mov rsi, rbx
0x258b:     48 89 ef                        	mov rdi, rbp
0x258e:     f3 a6                           	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x2590:     0f 97 c0                        	seta al
0x2593:     1c 00                           	sbb al, 0
0x2595:     84 c0                           	test al, al
0x2597:     0f 84 89 01 00 00               	je 0x2726 <submitr+0x63c>
0x259d:     ba 00 20 00 00                  	mov edx, 0x2000
0x25a2:     48 89 de                        	mov rsi, rbx
0x25a5:     4c 89 ef                        	mov rdi, r13
0x25a8:     e8 81 fa ff ff                  	call 0x202e <rio_readlineb>
0x25ad:     48 85 c0                        	test rax, rax
0x25b0:     7f d1                           	jg 0x2583 <submitr+0x499>
0x25b2:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x25bc:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x25c6:     49 89 07                        	mov qword ptr [r15], rax
0x25c9:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x25cd:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x25d7:     48 ba 72 65 61 64 20 68 65 61   	movabs rdx, 0x6165682064616572
0x25e1:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x25e5:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x25e9:     48 b8 64 65 72 73 20 66 72 6f   	movabs rax, 0x6f72662073726564
0x25f3:     48 ba 6d 20 73 65 72 76 65 72   	movabs rdx, 0x726576726573206d
0x25fd:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2601:     49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x2605:     41 c6 47 30 00                  	mov byte ptr [r15 + 0x30], 0
0x260a:     44 89 e7                        	mov edi, r12d
0x260d:     e8 1e eb ff ff                  	call 0x1130 <close>
0x2612:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2617:     e9 5e 01 00 00                  	jmp 0x277a <submitr+0x690>
0x261c:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2626:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x2630:     49 89 07                        	mov qword ptr [r15], rax
0x2633:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2637:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x2641:     48 ba 77 72 69 74 65 20 74 6f   	movabs rdx, 0x6f74206574697277
0x264b:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x264f:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x2653:     48 b8 20 74 68 65 20 73 65 72   	movabs rax, 0x7265732065687420
0x265d:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2661:     41 c7 47 28 76 65 72 00         	mov dword ptr [r15 + 0x28], 0x726576
0x2669:     44 89 e7                        	mov edi, r12d
0x266c:     e8 bf ea ff ff                  	call 0x1130 <close>
0x2671:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2676:     e9 ff 00 00 00                  	jmp 0x277a <submitr+0x690>
0x267b:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2685:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x268f:     49 89 07                        	mov qword ptr [r15], rax
0x2692:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2696:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x26a0:     48 ba 72 65 61 64 20 66 69 72   	movabs rdx, 0x7269662064616572
0x26aa:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x26ae:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x26b2:     48 b8 73 74 20 68 65 61 64 65   	movabs rax, 0x6564616568207473
0x26bc:     48 ba 72 20 66 72 6f 6d 20 73   	movabs rdx, 0x73206d6f72662072
0x26c6:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x26ca:     49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x26ce:     41 c7 47 30 65 72 76 65         	mov dword ptr [r15 + 0x30], 0x65767265
0x26d6:     66 41 c7 47 34 72 00            	mov word ptr [r15 + 0x34], 0x72
0x26dd:     44 89 e7                        	mov edi, r12d
0x26e0:     e8 4b ea ff ff                  	call 0x1130 <close>
0x26e5:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x26ea:     e9 8b 00 00 00                  	jmp 0x277a <submitr+0x690>
0x26ef:     4c 8d 8c 24 60 80 00 00         	lea r9, [rsp + 0x8060]
0x26f7:     48 8d 0d 82 0c 00 00            	lea rcx, [rip + 0xc82]
0x26fe:     48 c7 c2 ff ff ff ff            	mov rdx, -1
0x2705:     be 01 00 00 00                  	mov esi, 1
0x270a:     4c 89 ff                        	mov rdi, r15
0x270d:     b8 00 00 00 00                  	mov eax, 0
0x2712:     e8 29 eb ff ff                  	call 0x1240 <__sprintf_chk>
0x2717:     44 89 e7                        	mov edi, r12d
0x271a:     e8 11 ea ff ff                  	call 0x1130 <close>
0x271f:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2724:     eb 54                           	jmp 0x277a <submitr+0x690>
0x2726:     48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x272e:     48 8d 7c 24 50                  	lea rdi, [rsp + 0x50]
0x2733:     ba 00 20 00 00                  	mov edx, 0x2000
0x2738:     e8 f1 f8 ff ff                  	call 0x202e <rio_readlineb>
0x273d:     48 85 c0                        	test rax, rax
0x2740:     7e 61                           	jle 0x27a3 <submitr+0x6b9>
0x2742:     48 8d b4 24 60 20 00 00         	lea rsi, [rsp + 0x2060]
0x274a:     4c 89 ff                        	mov rdi, r15
0x274d:     e8 8e e9 ff ff                  	call 0x10e0 <strcpy>
0x2752:     44 89 e7                        	mov edi, r12d
0x2755:     e8 d6 e9 ff ff                  	call 0x1130 <close>
0x275a:     b9 03 00 00 00                  	mov ecx, 3
0x275f:     48 8d 3d e5 0c 00 00            	lea rdi, [rip + 0xce5]
0x2766:     4c 89 fe                        	mov rsi, r15
0x2769:     f3 a6                           	repe cmpsb byte ptr [rsi], byte ptr [rdi]
0x276b:     0f 97 c0                        	seta al
0x276e:     1c 00                           	sbb al, 0
0x2770:     84 c0                           	test al, al
0x2772:     0f 95 c0                        	setne al
0x2775:     0f b6 c0                        	movzx eax, al
0x2778:     f7 d8                           	neg eax
0x277a:     48 8b 94 24 68 a0 00 00         	mov rdx, qword ptr [rsp + 0xa068]
0x2782:     64 48 33 14 25 28 00 00 00      	xor rdx, qword ptr fs:[0x28]
0x278b:     0f 85 95 01 00 00               	jne 0x2926 <submitr+0x83c>
0x2791:     48 81 c4 78 a0 00 00            	add rsp, 0xa078
0x2798:     5b                              	pop rbx
0x2799:     5d                              	pop rbp
0x279a:     41 5c                           	pop r12
0x279c:     41 5d                           	pop r13
0x279e:     41 5e                           	pop r14
0x27a0:     41 5f                           	pop r15
0x27a2:     c3                              	ret 
0x27a3:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x27ad:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x27b7:     49 89 07                        	mov qword ptr [r15], rax
0x27ba:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x27be:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x27c8:     48 ba 72 65 61 64 20 73 74 61   	movabs rdx, 0x6174732064616572
0x27d2:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x27d6:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x27da:     48 b8 74 75 73 20 6d 65 73 73   	movabs rax, 0x7373656d20737574
0x27e4:     48 ba 61 67 65 20 66 72 6f 6d   	movabs rdx, 0x6d6f726620656761
0x27ee:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x27f2:     49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x27f6:     48 b8 20 73 65 72 76 65 72 00   	movabs rax, 0x72657672657320
0x2800:     49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x2804:     44 89 e7                        	mov edi, r12d
0x2807:     e8 24 e9 ff ff                  	call 0x1130 <close>
0x280c:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2811:     e9 64 ff ff ff                  	jmp 0x277a <submitr+0x690>
0x2816:     48 b8 45 72 72 6f 72 3a 20 52   	movabs rax, 0x52203a726f727245
0x2820:     48 ba 65 73 75 6c 74 20 73 74   	movabs rdx, 0x747320746c757365
0x282a:     49 89 07                        	mov qword ptr [r15], rax
0x282d:     49 89 57 08                     	mov qword ptr [r15 + 8], rdx
0x2831:     48 b8 72 69 6e 67 20 63 6f 6e   	movabs rax, 0x6e6f6320676e6972
0x283b:     48 ba 74 61 69 6e 73 20 61 6e   	movabs rdx, 0x6e6120736e696174
0x2845:     49 89 47 10                     	mov qword ptr [r15 + 0x10], rax
0x2849:     49 89 57 18                     	mov qword ptr [r15 + 0x18], rdx
0x284d:     48 b8 20 69 6c 6c 65 67 61 6c   	movabs rax, 0x6c6167656c6c6920
0x2857:     48 ba 20 6f 72 20 75 6e 70 72   	movabs rdx, 0x72706e7520726f20
0x2861:     49 89 47 20                     	mov qword ptr [r15 + 0x20], rax
0x2865:     49 89 57 28                     	mov qword ptr [r15 + 0x28], rdx
0x2869:     48 b8 69 6e 74 61 62 6c 65 20   	movabs rax, 0x20656c6261746e69
0x2873:     48 ba 63 68 61 72 61 63 74 65   	movabs rdx, 0x6574636172616863
0x287d:     49 89 47 30                     	mov qword ptr [r15 + 0x30], rax
0x2881:     49 89 57 38                     	mov qword ptr [r15 + 0x38], rdx
0x2885:     66 41 c7 47 40 72 2e            	mov word ptr [r15 + 0x40], 0x2e72
0x288c:     41 c6 47 42 00                  	mov byte ptr [r15 + 0x42], 0
0x2891:     44 89 e7                        	mov edi, r12d
0x2894:     e8 97 e8 ff ff                  	call 0x1130 <close>
0x2899:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x289e:     e9 d7 fe ff ff                  	jmp 0x277a <submitr+0x690>
0x28a3:     48 8d 9c 24 60 20 00 00         	lea rbx, [rsp + 0x2060]
0x28ab:     48 83 ec 08                     	sub rsp, 8
0x28af:     48 8d 84 24 68 40 00 00         	lea rax, [rsp + 0x4068]
0x28b7:     50                              	push rax
0x28b8:     ff 74 24 28                     	push qword ptr [rsp + 0x28]
0x28bc:     ff 74 24 38                     	push qword ptr [rsp + 0x38]
0x28c0:     4c 8b 4c 24 30                  	mov r9, qword ptr [rsp + 0x30]
0x28c5:     4c 8b 44 24 28                  	mov r8, qword ptr [rsp + 0x28]
0x28ca:     48 8d 0d df 0a 00 00            	lea rcx, [rip + 0xadf]
0x28d1:     ba 00 20 00 00                  	mov edx, 0x2000
0x28d6:     be 01 00 00 00                  	mov esi, 1
0x28db:     48 89 df                        	mov rdi, rbx
0x28de:     b8 00 00 00 00                  	mov eax, 0
0x28e3:     e8 58 e9 ff ff                  	call 0x1240 <__sprintf_chk>
0x28e8:     48 c7 c1 ff ff ff ff            	mov rcx, -1
0x28ef:     b8 00 00 00 00                  	mov eax, 0
0x28f4:     48 89 df                        	mov rdi, rbx
0x28f7:     f2 ae                           	repne scasb al, byte ptr [rdi]
0x28f9:     48 f7 d1                        	not rcx
0x28fc:     48 89 cb                        	mov rbx, rcx
0x28ff:     48 83 eb 01                     	sub rbx, 1
0x2903:     48 83 c4 20                     	add rsp, 0x20
0x2907:     48 89 dd                        	mov rbp, rbx
0x290a:     4c 8d ac 24 60 20 00 00         	lea r13, [rsp + 0x2060]
0x2912:     41 be 00 00 00 00               	mov r14d, 0
0x2918:     48 85 db                        	test rbx, rbx
0x291b:     0f 85 a9 fb ff ff               	jne 0x24ca <submitr+0x3e0>
0x2921:     e9 d3 fb ff ff                  	jmp 0x24f9 <submitr+0x40f>
0x2926:     e8 e5 e7 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: init_timeout at 0x292b -- 0x2956
0x292b:     85 ff                           	test edi, edi
0x292d:     74 25                           	je 0x2954 <init_timeout+0x29>
0x292f:     53                              	push rbx
0x2930:     89 fb                           	mov ebx, edi
0x2932:     48 8d 35 c5 f6 ff ff            	lea rsi, [rip - 0x93b]
0x2939:     bf 0e 00 00 00                  	mov edi, 0xe
0x293e:     e8 1d e8 ff ff                  	call 0x1160 <signal>
0x2943:     85 db                           	test ebx, ebx
0x2945:     bf 00 00 00 00                  	mov edi, 0
0x294a:     0f 49 fb                        	cmovns edi, ebx
0x294d:     e8 ce e7 ff ff                  	call 0x1120 <alarm>
0x2952:     5b                              	pop rbx
0x2953:     c3                              	ret 
0x2954:     f3 c3                           	ret 
; function: init_driver at 0x2956 -- 0x2b5f
0x2956:     41 54                           	push r12
0x2958:     55                              	push rbp
0x2959:     53                              	push rbx
0x295a:     48 83 ec 20                     	sub rsp, 0x20
0x295e:     49 89 fc                        	mov r12, rdi
0x2961:     64 48 8b 04 25 28 00 00 00      	mov rax, qword ptr fs:[0x28]
0x296a:     48 89 44 24 18                  	mov qword ptr [rsp + 0x18], rax
0x296f:     31 c0                           	xor eax, eax
0x2971:     be 01 00 00 00                  	mov esi, 1
0x2976:     bf 0d 00 00 00                  	mov edi, 0xd
0x297b:     e8 e0 e7 ff ff                  	call 0x1160 <signal>
0x2980:     be 01 00 00 00                  	mov esi, 1
0x2985:     bf 1d 00 00 00                  	mov edi, 0x1d
0x298a:     e8 d1 e7 ff ff                  	call 0x1160 <signal>
0x298f:     be 01 00 00 00                  	mov esi, 1
0x2994:     bf 1d 00 00 00                  	mov edi, 0x1d
0x2999:     e8 c2 e7 ff ff                  	call 0x1160 <signal>
0x299e:     ba 00 00 00 00                  	mov edx, 0
0x29a3:     be 01 00 00 00                  	mov esi, 1
0x29a8:     bf 02 00 00 00                  	mov edi, 2
0x29ad:     e8 9e e8 ff ff                  	call 0x1250 <socket>
0x29b2:     85 c0                           	test eax, eax
0x29b4:     0f 88 a3 00 00 00               	js 0x2a5d <init_driver+0x107>
0x29ba:     89 c3                           	mov ebx, eax
0x29bc:     48 8d 3d 8b 0a 00 00            	lea rdi, [rip + 0xa8b]
0x29c3:     e8 a8 e7 ff ff                  	call 0x1170 <gethostbyname>
0x29c8:     48 85 c0                        	test rax, rax
0x29cb:     0f 84 df 00 00 00               	je 0x2ab0 <init_driver+0x15a>
0x29d1:     48 89 e5                        	mov rbp, rsp
0x29d4:     48 c7 44 24 02 00 00 00 00      	mov qword ptr [rsp + 2], 0
0x29dd:     c7 45 0a 00 00 00 00            	mov dword ptr [rbp + 0xa], 0
0x29e4:     66 c7 45 0e 00 00               	mov word ptr [rbp + 0xe], 0
0x29ea:     66 c7 04 24 02 00               	mov word ptr [rsp], 2
0x29f0:     48 63 50 14                     	movsxd rdx, dword ptr [rax + 0x14]
0x29f4:     48 8b 40 18                     	mov rax, qword ptr [rax + 0x18]
0x29f8:     48 8d 7d 04                     	lea rdi, [rbp + 4]
0x29fc:     b9 0c 00 00 00                  	mov ecx, 0xc
0x2a01:     48 8b 30                        	mov rsi, qword ptr [rax]
0x2a04:     e8 77 e7 ff ff                  	call 0x1180 <__memmove_chk>
0x2a09:     66 c7 44 24 02 3b 6e            	mov word ptr [rsp + 2], 0x6e3b
0x2a10:     ba 10 00 00 00                  	mov edx, 0x10
0x2a15:     48 89 ee                        	mov rsi, rbp
0x2a18:     89 df                           	mov edi, ebx
0x2a1a:     e8 e1 e7 ff ff                  	call 0x1200 <connect>
0x2a1f:     85 c0                           	test eax, eax
0x2a21:     0f 88 fb 00 00 00               	js 0x2b22 <init_driver+0x1cc>
0x2a27:     89 df                           	mov edi, ebx
0x2a29:     e8 02 e7 ff ff                  	call 0x1130 <close>
0x2a2e:     66 41 c7 04 24 4f 4b            	mov word ptr [r12], 0x4b4f
0x2a35:     41 c6 44 24 02 00               	mov byte ptr [r12 + 2], 0
0x2a3b:     b8 00 00 00 00                  	mov eax, 0
0x2a40:     48 8b 4c 24 18                  	mov rcx, qword ptr [rsp + 0x18]
0x2a45:     64 48 33 0c 25 28 00 00 00      	xor rcx, qword ptr fs:[0x28]
0x2a4e:     0f 85 06 01 00 00               	jne 0x2b5a <init_driver+0x204>
0x2a54:     48 83 c4 20                     	add rsp, 0x20
0x2a58:     5b                              	pop rbx
0x2a59:     5d                              	pop rbp
0x2a5a:     41 5c                           	pop r12
0x2a5c:     c3                              	ret 
0x2a5d:     48 b8 45 72 72 6f 72 3a 20 43   	movabs rax, 0x43203a726f727245
0x2a67:     48 ba 6c 69 65 6e 74 20 75 6e   	movabs rdx, 0x6e7520746e65696c
0x2a71:     49 89 04 24                     	mov qword ptr [r12], rax
0x2a75:     49 89 54 24 08                  	mov qword ptr [r12 + 8], rdx
0x2a7a:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x2a84:     48 ba 63 72 65 61 74 65 20 73   	movabs rdx, 0x7320657461657263
0x2a8e:     49 89 44 24 10                  	mov qword ptr [r12 + 0x10], rax
0x2a93:     49 89 54 24 18                  	mov qword ptr [r12 + 0x18], rdx
0x2a98:     41 c7 44 24 20 6f 63 6b 65      	mov dword ptr [r12 + 0x20], 0x656b636f
0x2aa1:     66 41 c7 44 24 24 74 00         	mov word ptr [r12 + 0x24], 0x74
0x2aa9:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2aae:     eb 90                           	jmp 0x2a40 <init_driver+0xea>
0x2ab0:     48 b8 45 72 72 6f 72 3a 20 44   	movabs rax, 0x44203a726f727245
0x2aba:     48 ba 4e 53 20 69 73 20 75 6e   	movabs rdx, 0x6e7520736920534e
0x2ac4:     49 89 04 24                     	mov qword ptr [r12], rax
0x2ac8:     49 89 54 24 08                  	mov qword ptr [r12 + 8], rdx
0x2acd:     48 b8 61 62 6c 65 20 74 6f 20   	movabs rax, 0x206f7420656c6261
0x2ad7:     48 ba 72 65 73 6f 6c 76 65 20   	movabs rdx, 0x2065766c6f736572
0x2ae1:     49 89 44 24 10                  	mov qword ptr [r12 + 0x10], rax
0x2ae6:     49 89 54 24 18                  	mov qword ptr [r12 + 0x18], rdx
0x2aeb:     48 b8 73 65 72 76 65 72 20 61   	movabs rax, 0x6120726576726573
0x2af5:     49 89 44 24 20                  	mov qword ptr [r12 + 0x20], rax
0x2afa:     41 c7 44 24 28 64 64 72 65      	mov dword ptr [r12 + 0x28], 0x65726464
0x2b03:     66 41 c7 44 24 2c 73 73         	mov word ptr [r12 + 0x2c], 0x7373
0x2b0b:     41 c6 44 24 2e 00               	mov byte ptr [r12 + 0x2e], 0
0x2b11:     89 df                           	mov edi, ebx
0x2b13:     e8 18 e6 ff ff                  	call 0x1130 <close>
0x2b18:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2b1d:     e9 1e ff ff ff                  	jmp 0x2a40 <init_driver+0xea>
0x2b22:     4c 8d 05 25 09 00 00            	lea r8, [rip + 0x925]
0x2b29:     48 8d 0d d8 08 00 00            	lea rcx, [rip + 0x8d8]
0x2b30:     48 c7 c2 ff ff ff ff            	mov rdx, -1
0x2b37:     be 01 00 00 00                  	mov esi, 1
0x2b3c:     4c 89 e7                        	mov rdi, r12
0x2b3f:     b8 00 00 00 00                  	mov eax, 0
0x2b44:     e8 f7 e6 ff ff                  	call 0x1240 <__sprintf_chk>
0x2b49:     89 df                           	mov edi, ebx
0x2b4b:     e8 e0 e5 ff ff                  	call 0x1130 <close>
0x2b50:     b8 ff ff ff ff                  	mov eax, 0xffffffff
0x2b55:     e9 e6 fe ff ff                  	jmp 0x2a40 <init_driver+0xea>
0x2b5a:     e8 b1 e5 ff ff                  	call 0x1110 <__stack_chk_fail>
; function: driver_post at 0x2b5f -- 0x2bd2
0x2b5f:     53                              	push rbx
0x2b60:     4c 89 c3                        	mov rbx, r8
0x2b63:     85 c9                           	test ecx, ecx
0x2b65:     75 17                           	jne 0x2b7e <driver_post+0x1f>
0x2b67:     48 85 ff                        	test rdi, rdi
0x2b6a:     74 05                           	je 0x2b71 <driver_post+0x12>
0x2b6c:     80 3f 00                        	cmp byte ptr [rdi], 0
0x2b6f:     75 33                           	jne 0x2ba4 <driver_post+0x45>
0x2b71:     66 c7 03 4f 4b                  	mov word ptr [rbx], 0x4b4f
0x2b76:     c6 43 02 00                     	mov byte ptr [rbx + 2], 0
0x2b7a:     89 c8                           	mov eax, ecx
0x2b7c:     5b                              	pop rbx
0x2b7d:     c3                              	ret 
0x2b7e:     48 8d 35 d9 08 00 00            	lea rsi, [rip + 0x8d9]
0x2b85:     bf 01 00 00 00                  	mov edi, 1
0x2b8a:     b8 00 00 00 00                  	mov eax, 0
0x2b8f:     e8 2c e6 ff ff                  	call 0x11c0 <__printf_chk>
0x2b94:     66 c7 03 4f 4b                  	mov word ptr [rbx], 0x4b4f
0x2b99:     c6 43 02 00                     	mov byte ptr [rbx + 2], 0
0x2b9d:     b8 00 00 00 00                  	mov eax, 0
0x2ba2:     eb d8                           	jmp 0x2b7c <driver_post+0x1d>
0x2ba4:     41 50                           	push r8
0x2ba6:     52                              	push rdx
0x2ba7:     4c 8d 0d c7 08 00 00            	lea r9, [rip + 0x8c7]
0x2bae:     49 89 f0                        	mov r8, rsi
0x2bb1:     48 89 f9                        	mov rcx, rdi
0x2bb4:     48 8d 15 c4 08 00 00            	lea rdx, [rip + 0x8c4]
0x2bbb:     be 6e 3b 00 00                  	mov esi, 0x3b6e
0x2bc0:     48 8d 3d 87 08 00 00            	lea rdi, [rip + 0x887]
0x2bc7:     e8 1e f5 ff ff                  	call 0x20ea <submitr>
0x2bcc:     48 83 c4 10                     	add rsp, 0x10
0x2bd0:     eb aa                           	jmp 0x2b7c <driver_post+0x1d>
; data inside code section at 0x2bd2 -- 0x2be0
0x2bd2:     66 2e 0f 1f 84 00 00 00  00 00 0f 1f 40 00         |f...........@.  |
; function: __libc_csu_init at 0x2be0 -- 0x2c45
0x2be0:     41 57                           	push r15
0x2be2:     41 56                           	push r14
0x2be4:     49 89 d7                        	mov r15, rdx
0x2be7:     41 55                           	push r13
0x2be9:     41 54                           	push r12
0x2beb:     4c 8d 25 f6 10 20 00            	lea r12, [rip + 0x2010f6]
0x2bf2:     55                              	push rbp
0x2bf3:     48 8d 2d f6 10 20 00            	lea rbp, [rip + 0x2010f6]
0x2bfa:     53                              	push rbx
0x2bfb:     41 89 fd                        	mov r13d, edi
0x2bfe:     49 89 f6                        	mov r14, rsi
0x2c01:     4c 29 e5                        	sub rbp, r12
0x2c04:     48 83 ec 08                     	sub rsp, 8
0x2c08:     48 c1 fd 03                     	sar rbp, 3
0x2c0c:     e8 77 e4 ff ff                  	call 0x1088 <_init>
0x2c11:     48 85 ed                        	test rbp, rbp
0x2c14:     74 20                           	je 0x2c36 <__libc_csu_init+0x56>
0x2c16:     31 db                           	xor ebx, ebx
0x2c18:     0f 1f 84 00 00 00 00 00         	nop dword ptr [rax + rax]
0x2c20:     4c 89 fa                        	mov rdx, r15
0x2c23:     4c 89 f6                        	mov rsi, r14
0x2c26:     44 89 ef                        	mov edi, r13d
0x2c29:     41 ff 14 dc                     	call qword ptr [r12 + rbx*8]
0x2c2d:     48 83 c3 01                     	add rbx, 1
0x2c31:     48 39 dd                        	cmp rbp, rbx
0x2c34:     75 ea                           	jne 0x2c20 <__libc_csu_init+0x40>
0x2c36:     48 83 c4 08                     	add rsp, 8
0x2c3a:     5b                              	pop rbx
0x2c3b:     5d                              	pop rbp
0x2c3c:     41 5c                           	pop r12
0x2c3e:     41 5d                           	pop r13
0x2c40:     41 5e                           	pop r14
0x2c42:     41 5f                           	pop r15
0x2c44:     c3                              	ret 
; data inside code section at 0x2c45 -- 0x2c50
0x2c45:     90 66 2e 0f 1f 84 00 00  00 00 00                  |.f.........     |
; function: __libc_csu_fini at 0x2c50 -- 0x2c52
0x2c50:     f3 c3                           	ret 
; section: .fini
; function: _fini at 0x2c54 -- 0x2c5d
0x2c54:     48 83 ec 08                     	sub rsp, 8
0x2c58:     48 83 c4 08                     	add rsp, 8
0x2c5c:     c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x238:      2f 6c 69 62 36 34 2f 6c  64 2d 6c 69 6e 75 78 2d   |/lib64/ld-linux-|
0x248:      78 38 36 2d 36 34 2e 73  6f 2e 32 00 04            |x86-64.so.2..   |
; section: .gnu.hash
0x298:      03 00 00 00 21 00 00 00  01 00 00 00 06 00 00 00   |....!...........|
0x2a8:      00 01 20 00 80 01 10 02  21 00 00 00 22 00 00 00   |.. .....!..."...|
0x2b8:      00 00 00 00 29 1d 8c 1c  66 55 61 10 39 f2 8b 1c   |....)...fUa.9...|
0x2c8:      00                                                 |.               |
; section: .dynsym
0x2c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2d8:      00 00 00 00 00 00 00 00  d2 00 00 00 12 00 00 00   |................|
0x2e8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2f8:      b9 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x308:      00 00 00 00 00 00 00 00  80 00 00 00 12 00 00 00   |................|
0x318:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x328:      77 01 00 00 20 00 00 00  00 00 00 00 00 00 00 00   |w... ...........|
0x338:      00 00 00 00 00 00 00 00  19 00 00 00 12 00 00 00   |................|
0x348:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x358:      57 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |W...............|
0x368:      00 00 00 00 00 00 00 00  3b 01 00 00 12 00 00 00   |........;.......|
0x378:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x388:      5c 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |\...............|
0x398:      00 00 00 00 00 00 00 00  e0 00 00 00 12 00 00 00   |................|
0x3a8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3b8:      00 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3c8:      00 00 00 00 00 00 00 00  91 00 00 00 12 00 00 00   |................|
0x3d8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x3e8:      29 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |)...............|
0x3f8:      00 00 00 00 00 00 00 00  7a 00 00 00 12 00 00 00   |........z.......|
0x408:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x418:      50 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |P...............|
0x428:      00 00 00 00 00 00 00 00  e6 00 00 00 12 00 00 00   |................|
0x438:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x448:      ab 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x458:      00 00 00 00 00 00 00 00  93 01 00 00 20 00 00 00   |............ ...|
0x468:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x478:      73 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |s...............|
0x488:      00 00 00 00 00 00 00 00  12 00 00 00 12 00 00 00   |................|
0x498:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4a8:      38 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |8...............|
0x4b8:      00 00 00 00 00 00 00 00  20 00 00 00 12 00 00 00   |........ .......|
0x4c8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x4d8:      32 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |2...............|
0x4e8:      00 00 00 00 00 00 00 00  f4 00 00 00 12 00 00 00   |................|
0x4f8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x508:      2d 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |-...............|
0x518:      00 00 00 00 00 00 00 00  48 00 00 00 12 00 00 00   |........H.......|
0x528:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x538:      96 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x548:      00 00 00 00 00 00 00 00  a2 01 00 00 20 00 00 00   |............ ...|
0x558:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x568:      06 01 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x578:      00 00 00 00 00 00 00 00  0c 01 00 00 22 00 00 00   |............"...|
0x588:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x598:      c4 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5a8:      00 00 00 00 00 00 00 00  1b 01 00 00 12 00 00 00   |................|
0x5b8:      00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5c8:      0b 00 00 00 12 00 00 00  00 00 00 00 00 00 00 00   |................|
0x5d8:      00 00 00 00 00 00 00 00  a4 00 00 00 11 00 18 00   |................|
0x5e8:      80 46 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.F .............|
0x5f8:      6d 00 00 00 11 00 18 00  90 46 20 00 00 00 00 00   |m........F .....|
0x608:      08 00 00 00 00 00 00 00  d9 00 00 00 11 00 18 00   |................|
0x618:      a0 46 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.F .............|
0x628:      00                                                 |.               |
; section: .dynstr
0x628:      00 6c 69 62 63 2e 73 6f  2e 36 00 73 6f 63 6b 65   |.libc.so.6.socke|
0x638:      74 00 66 66 6c 75 73 68  00 73 74 72 63 70 79 00   |t.fflush.strcpy.|
0x648:      5f 5f 70 72 69 6e 74 66  5f 63 68 6b 00 65 78 69   |__printf_chk.exi|
0x658:      74 00 66 6f 70 65 6e 00  5f 5f 69 73 6f 63 39 39   |t.fopen.__isoc99|
0x668:      5f 73 73 63 61 6e 66 00  63 6f 6e 6e 65 63 74 00   |_sscanf.connect.|
0x678:      73 69 67 6e 61 6c 00 70  75 74 73 00 5f 5f 73 74   |signal.puts.__st|
0x688:      61 63 6b 5f 63 68 6b 5f  66 61 69 6c 00 73 74 64   |ack_chk_fail.std|
0x698:      69 6e 00 73 74 72 74 6f  6c 00 66 67 65 74 73 00   |in.strtol.fgets.|
0x6a8:      5f 5f 65 72 72 6e 6f 5f  6c 6f 63 61 74 69 6f 6e   |__errno_location|
0x6b8:      00 72 65 61 64 00 5f 5f  66 70 72 69 6e 74 66 5f   |.read.__fprintf_|
0x6c8:      63 68 6b 00 73 74 64 6f  75 74 00 5f 5f 6d 65 6d   |chk.stdout.__mem|
0x6d8:      6d 6f 76 65 5f 63 68 6b  00 73 74 72 63 61 73 65   |move_chk.strcase|
0x6e8:      63 6d 70 00 5f 5f 63 74  79 70 65 5f 62 5f 6c 6f   |cmp.__ctype_b_lo|
0x6f8:      63 00 67 65 74 65 6e 76  00 73 74 64 65 72 72 00   |c.getenv.stderr.|
0x708:      61 6c 61 72 6d 00 67 65  74 68 6f 73 74 62 79 6e   |alarm.gethostbyn|
0x718:      61 6d 65 00 67 65 74 68  6f 73 74 6e 61 6d 65 00   |ame.gethostname.|
0x728:      63 6c 6f 73 65 00 73 6c  65 65 70 00 5f 5f 63 78   |close.sleep.__cx|
0x738:      61 5f 66 69 6e 61 6c 69  7a 65 00 5f 5f 73 70 72   |a_finalize.__spr|
0x748:      69 6e 74 66 5f 63 68 6b  00 5f 5f 6c 69 62 63 5f   |intf_chk.__libc_|
0x758:      73 74 61 72 74 5f 6d 61  69 6e 00 77 72 69 74 65   |start_main.write|
0x768:      00 47 4c 49 42 43 5f 32  2e 33 00 47 4c 49 42 43   |.GLIBC_2.3.GLIBC|
0x778:      5f 32 2e 37 00 47 4c 49  42 43 5f 32 2e 33 2e 34   |_2.7.GLIBC_2.3.4|
0x788:      00 47 4c 49 42 43 5f 32  2e 34 00 47 4c 49 42 43   |.GLIBC_2.4.GLIBC|
0x798:      5f 32 2e 32 2e 35 00 5f  49 54 4d 5f 64 65 72 65   |_2.2.5._ITM_dere|
0x7a8:      67 69 73 74 65 72 54 4d  43 6c 6f 6e 65 54 61 62   |gisterTMCloneTab|
0x7b8:      6c 65 00 5f 5f 67 6d 6f  6e 5f 73 74 61 72 74 5f   |le.__gmon_start_|
0x7c8:      5f 00 5f 49 54 4d 5f 72  65 67 69 73 74 65 72 54   |_._ITM_registerT|
0x7d8:      4d 43 6c 6f 6e 65 54 61  62 6c 65 00 00            |MCloneTable..   |
; section: .gnu.version
0x7e4:      00 00 02 00 02 00 02 00  00 00 02 00 02 00 02 00   |................|
0x7f4:      03 00 02 00 02 00 02 00  02 00 02 00 02 00 02 00   |................|
0x804:      04 00 00 00 02 00 02 00  05 00 04 00 02 00 02 00   |................|
0x814:      02 00 02 00 04 00 00 00  02 00 02 00 06 00 04 00   |................|
0x824:      02 00 02 00 02 00 02 00  ??                        |........?       |
; section: .gnu.version_r
0x830:      01 00 05 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x840:      13 69 69 0d 00 00 06 00  41 01 00 00 10 00 00 00   |.ii.....A.......|
0x850:      17 69 69 0d 00 00 05 00  4b 01 00 00 10 00 00 00   |.ii.....K.......|
0x860:      74 19 69 09 00 00 04 00  55 01 00 00 10 00 00 00   |t.i.....U.......|
0x870:      14 69 69 0d 00 00 03 00  61 01 00 00 10 00 00 00   |.ii.....a.......|
0x880:      75 1a 69 09 00 00 02 00  6b 01 00 00 00 00 00 00   |u.i.....k.......|
0x890:      e8                                                 |.               |
; section: .rela.dyn
0x890:      e8 3c 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.< .............|
0x8a0:      70 13 00 00 00 00 00 00  f0 3c 20 00 00 00 00 00   |p........< .....|
0x8b0:      08 00 00 00 00 00 00 00  30 13 00 00 00 00 00 00   |........0.......|
0x8c0:      08 40 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.@ .............|
0x8d0:      08 40 20 00 00 00 00 00  58 41 20 00 00 00 00 00   |.@ .....XA .....|
0x8e0:      08 00 00 00 00 00 00 00  70 41 20 00 00 00 00 00   |........pA .....|
0x8f0:      60 41 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |`A .............|
0x900:      90 41 20 00 00 00 00 00  78 41 20 00 00 00 00 00   |.A .....xA .....|
0x910:      08 00 00 00 00 00 00 00  f0 41 20 00 00 00 00 00   |.........A .....|
0x920:      80 41 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.A .............|
0x930:      b0 41 20 00 00 00 00 00  98 41 20 00 00 00 00 00   |.A ......A .....|
0x940:      08 00 00 00 00 00 00 00  d0 41 20 00 00 00 00 00   |.........A .....|
0x950:      a0 41 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.A .............|
0x960:      10 42 20 00 00 00 00 00  b8 41 20 00 00 00 00 00   |.B ......A .....|
0x970:      08 00 00 00 00 00 00 00  b0 40 20 00 00 00 00 00   |.........@ .....|
0x980:      c0 41 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.A .............|
0x990:      70 40 20 00 00 00 00 00  d8 41 20 00 00 00 00 00   |p@ ......A .....|
0x9a0:      08 00 00 00 00 00 00 00  10 40 20 00 00 00 00 00   |.........@ .....|
0x9b0:      e0 41 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.A .............|
0x9c0:      d0 40 20 00 00 00 00 00  f8 41 20 00 00 00 00 00   |.@ ......A .....|
0x9d0:      08 00 00 00 00 00 00 00  30 40 20 00 00 00 00 00   |........0@ .....|
0x9e0:      00 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0x9f0:      90 40 20 00 00 00 00 00  18 42 20 00 00 00 00 00   |.@ ......B .....|
0xa00:      08 00 00 00 00 00 00 00  50 40 20 00 00 00 00 00   |........P@ .....|
0xa10:      20 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   | B .............|
0xa20:      f0 40 20 00 00 00 00 00  38 42 20 00 00 00 00 00   |.@ .....8B .....|
0xa30:      08 00 00 00 00 00 00 00  40 42 20 00 00 00 00 00   |........@B .....|
0xa40:      48 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |HB .............|
0xa50:      50 42 20 00 00 00 00 00  58 42 20 00 00 00 00 00   |PB .....XB .....|
0xa60:      08 00 00 00 00 00 00 00  60 42 20 00 00 00 00 00   |........`B .....|
0xa70:      68 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |hB .............|
0xa80:      70 42 20 00 00 00 00 00  78 42 20 00 00 00 00 00   |pB .....xB .....|
0xa90:      08 00 00 00 00 00 00 00  10 41 20 00 00 00 00 00   |.........A .....|
0xaa0:      80 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xab0:      27 31 00 00 00 00 00 00  88 42 20 00 00 00 00 00   |'1.......B .....|
0xac0:      08 00 00 00 00 00 00 00  39 31 00 00 00 00 00 00   |........91......|
0xad0:      90 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xae0:      4c 31 00 00 00 00 00 00  98 42 20 00 00 00 00 00   |L1.......B .....|
0xaf0:      08 00 00 00 00 00 00 00  5f 31 00 00 00 00 00 00   |........_1......|
0xb00:      a0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xb10:      74 31 00 00 00 00 00 00  a8 42 20 00 00 00 00 00   |t1.......B .....|
0xb20:      08 00 00 00 00 00 00 00  84 31 00 00 00 00 00 00   |.........1......|
0xb30:      b0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xb40:      97 31 00 00 00 00 00 00  b8 42 20 00 00 00 00 00   |.1.......B .....|
0xb50:      08 00 00 00 00 00 00 00  b0 31 00 00 00 00 00 00   |.........1......|
0xb60:      c0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xb70:      c5 31 00 00 00 00 00 00  c8 42 20 00 00 00 00 00   |.1.......B .....|
0xb80:      08 00 00 00 00 00 00 00  da 31 00 00 00 00 00 00   |.........1......|
0xb90:      d0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xba0:      ec 31 00 00 00 00 00 00  d8 42 20 00 00 00 00 00   |.1.......B .....|
0xbb0:      08 00 00 00 00 00 00 00  00 32 00 00 00 00 00 00   |.........2......|
0xbc0:      e0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xbd0:      15 32 00 00 00 00 00 00  e8 42 20 00 00 00 00 00   |.2.......B .....|
0xbe0:      08 00 00 00 00 00 00 00  27 32 00 00 00 00 00 00   |........'2......|
0xbf0:      f0 42 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.B .............|
0xc00:      3a 32 00 00 00 00 00 00  f8 42 20 00 00 00 00 00   |:2.......B .....|
0xc10:      08 00 00 00 00 00 00 00  4a 32 00 00 00 00 00 00   |........J2......|
0xc20:      00 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.C .............|
0xc30:      5d 32 00 00 00 00 00 00  08 43 20 00 00 00 00 00   |]2.......C .....|
0xc40:      08 00 00 00 00 00 00 00  6f 32 00 00 00 00 00 00   |........o2......|
0xc50:      10 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |.C .............|
0xc60:      83 32 00 00 00 00 00 00  18 43 20 00 00 00 00 00   |.2.......C .....|
0xc70:      08 00 00 00 00 00 00 00  99 32 00 00 00 00 00 00   |.........2......|
0xc80:      20 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   | C .............|
0xc90:      af 32 00 00 00 00 00 00  28 43 20 00 00 00 00 00   |.2......(C .....|
0xca0:      08 00 00 00 00 00 00 00  c4 32 00 00 00 00 00 00   |.........2......|
0xcb0:      30 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |0C .............|
0xcc0:      da 32 00 00 00 00 00 00  38 43 20 00 00 00 00 00   |.2......8C .....|
0xcd0:      08 00 00 00 00 00 00 00  eb 32 00 00 00 00 00 00   |.........2......|
0xce0:      40 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |@C .............|
0xcf0:      fd 32 00 00 00 00 00 00  48 43 20 00 00 00 00 00   |.2......HC .....|
0xd00:      08 00 00 00 00 00 00 00  10 33 00 00 00 00 00 00   |.........3......|
0xd10:      50 43 20 00 00 00 00 00  08 00 00 00 00 00 00 00   |PC .............|
0xd20:      29 33 00 00 00 00 00 00  58 43 20 00 00 00 00 00   |)3......XC .....|
0xd30:      08 00 00 00 00 00 00 00  40 33 00 00 00 00 00 00   |........@3......|
0xd40:      d8 3f 20 00 00 00 00 00  06 00 00 00 04 00 00 00   |.? .............|
0xd50:      00 00 00 00 00 00 00 00  e0 3f 20 00 00 00 00 00   |.........? .....|
0xd60:      06 00 00 00 0c 00 00 00  00 00 00 00 00 00 00 00   |................|
0xd70:      e8 3f 20 00 00 00 00 00  06 00 00 00 11 00 00 00   |.? .............|
0xd80:      00 00 00 00 00 00 00 00  f0 3f 20 00 00 00 00 00   |.........? .....|
0xd90:      06 00 00 00 1b 00 00 00  00 00 00 00 00 00 00 00   |................|
0xda0:      f8 3f 20 00 00 00 00 00  06 00 00 00 1d 00 00 00   |.? .............|
0xdb0:      00 00 00 00 00 00 00 00  80 46 20 00 00 00 00 00   |.........F .....|
0xdc0:      05 00 00 00 21 00 00 00  00 00 00 00 00 00 00 00   |....!...........|
0xdd0:      90 46 20 00 00 00 00 00  05 00 00 00 22 00 00 00   |.F ........."...|
0xde0:      00 00 00 00 00 00 00 00  a0 46 20 00 00 00 00 00   |.........F .....|
0xdf0:      05 00 00 00 23 00 00 00  00 00 00 00 00 00 00 00   |....#...........|
0xe00:      00                                                 |.               |
; section: .rela.plt
0xe00:      00 3f 20 00 00 00 00 00  07 00 00 00 01 00 00 00   |.? .............|
0xe10:      00 00 00 00 00 00 00 00  08 3f 20 00 00 00 00 00   |.........? .....|
0xe20:      07 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe30:      10 3f 20 00 00 00 00 00  07 00 00 00 03 00 00 00   |.? .............|
0xe40:      00 00 00 00 00 00 00 00  18 3f 20 00 00 00 00 00   |.........? .....|
0xe50:      07 00 00 00 05 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe60:      20 3f 20 00 00 00 00 00  07 00 00 00 06 00 00 00   | ? .............|
0xe70:      00 00 00 00 00 00 00 00  28 3f 20 00 00 00 00 00   |........(? .....|
0xe80:      07 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0xe90:      30 3f 20 00 00 00 00 00  07 00 00 00 08 00 00 00   |0? .............|
0xea0:      00 00 00 00 00 00 00 00  38 3f 20 00 00 00 00 00   |........8? .....|
0xeb0:      07 00 00 00 09 00 00 00  00 00 00 00 00 00 00 00   |................|
0xec0:      40 3f 20 00 00 00 00 00  07 00 00 00 0a 00 00 00   |@? .............|
0xed0:      00 00 00 00 00 00 00 00  48 3f 20 00 00 00 00 00   |........H? .....|
0xee0:      07 00 00 00 0b 00 00 00  00 00 00 00 00 00 00 00   |................|
0xef0:      50 3f 20 00 00 00 00 00  07 00 00 00 0d 00 00 00   |P? .............|
0xf00:      00 00 00 00 00 00 00 00  58 3f 20 00 00 00 00 00   |........X? .....|
0xf10:      07 00 00 00 0e 00 00 00  00 00 00 00 00 00 00 00   |................|
0xf20:      60 3f 20 00 00 00 00 00  07 00 00 00 0f 00 00 00   |`? .............|
0xf30:      00 00 00 00 00 00 00 00  68 3f 20 00 00 00 00 00   |........h? .....|
0xf40:      07 00 00 00 10 00 00 00  00 00 00 00 00 00 00 00   |................|
0xf50:      70 3f 20 00 00 00 00 00  07 00 00 00 12 00 00 00   |p? .............|
0xf60:      00 00 00 00 00 00 00 00  78 3f 20 00 00 00 00 00   |........x? .....|
0xf70:      07 00 00 00 13 00 00 00  00 00 00 00 00 00 00 00   |................|
0xf80:      80 3f 20 00 00 00 00 00  07 00 00 00 14 00 00 00   |.? .............|
0xf90:      00 00 00 00 00 00 00 00  88 3f 20 00 00 00 00 00   |.........? .....|
0xfa0:      07 00 00 00 15 00 00 00  00 00 00 00 00 00 00 00   |................|
0xfb0:      90 3f 20 00 00 00 00 00  07 00 00 00 16 00 00 00   |.? .............|
0xfc0:      00 00 00 00 00 00 00 00  98 3f 20 00 00 00 00 00   |.........? .....|
0xfd0:      07 00 00 00 17 00 00 00  00 00 00 00 00 00 00 00   |................|
0xfe0:      a0 3f 20 00 00 00 00 00  07 00 00 00 18 00 00 00   |.? .............|
0xff0:      00 00 00 00 00 00 00 00  a8 3f 20 00 00 00 00 00   |.........? .....|
0x1000:     07 00 00 00 19 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1010:     b0 3f 20 00 00 00 00 00  07 00 00 00 1a 00 00 00   |.? .............|
0x1020:     00 00 00 00 00 00 00 00  b8 3f 20 00 00 00 00 00   |.........? .....|
0x1030:     07 00 00 00 1c 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1040:     c0 3f 20 00 00 00 00 00  07 00 00 00 1e 00 00 00   |.? .............|
0x1050:     00 00 00 00 00 00 00 00  c8 3f 20 00 00 00 00 00   |.........? .....|
0x1060:     07 00 00 00 1f 00 00 00  00 00 00 00 00 00 00 00   |................|
0x1070:     d0 3f 20 00 00 00 00 00  07 00 00 00 20 00 00 00   |.? ......... ...|
0x1080:     00 00 00 00 00 00 00 00  48                        |........H       |
; section: .rodata
0x2c60:     01 00 02 00 72 00                                  |....r.          |
0x2c66:     25 73 3a 20 45 72 72 6f  72 3a 20 43 6f 75 6c 64   |%s: Error: Could|   "%s: Error: Couldn't open %s\n"
0x2c76:     6e 27 74 20 6f 70 65 6e  20 25 73 0a 00            |n't open %s..   |
0x2c83:     55 73 61 67 65 3a 20 25  73 20 5b 3c 69 6e 70 75   |Usage: %s [<inpu|   "Usage: %s [<input_file>]\n"
0x2c93:     74 5f 66 69 6c 65 3e 5d  0a 00                     |t_file>]..      |
0x2c9d:     54 68 61 74 27 73 20 6e  75 6d 62 65 72 20 32 2e   |That's number 2.|   "That's number 2.  Keep going!"
0x2cad:     20 20 4b 65 65 70 20 67  6f 69 6e 67 21 00         |  Keep going!.  |
0x2cbb:     48 61 6c 66 77 61 79 20  74 68 65 72 65 21 00      |Halfway there!. |   "Halfway there!"
0x2cca:     47 6f 6f 64 20 77 6f 72  6b 21 20 20 4f 6e 20 74   |Good work!  On t|   "Good work!  On to the next..."
0x2cda:     6f 20 74 68 65 20 6e 65  78 74 2e 2e 2e 00         |o the next....  |
0x2ce8:     57 65 6c 63 6f 6d 65 20  74 6f 20 6d 79 20 66 69   |Welcome to my fi|   "Welcome to my fiendish little bomb. You have 6 phases with"
0x2cf8:     65 6e 64 69 73 68 20 6c  69 74 74 6c 65 20 62 6f   |endish little bo|
0x2d08:     6d 62 2e 20 59 6f 75 20  68 61 76 65 20 36 20 70   |mb. You have 6 p|
0x2d18:     68 61 73 65 73 20 77 69  74 68 00                  |hases with.     |
0x2d23:     00 00 00 00 00                                     |.....           |
0x2d28:     77 68 69 63 68 20 74 6f  20 62 6c 6f 77 20 79 6f   |which to blow yo|   "which to blow yourself up. Have a nice day!"
0x2d38:     75 72 73 65 6c 66 20 75  70 2e 20 48 61 76 65 20   |urself up. Have |
0x2d48:     61 20 6e 69 63 65 20 64  61 79 21 00               |a nice day!.    |
0x2d54:     00 00 00 00                                        |....            |
0x2d58:     50 68 61 73 65 20 31 20  64 65 66 75 73 65 64 2e   |Phase 1 defused.|   "Phase 1 defused. How about the next one?"
0x2d68:     20 48 6f 77 20 61 62 6f  75 74 20 74 68 65 20 6e   | How about the n|
0x2d78:     65 78 74 20 6f 6e 65 3f  00                        |ext one?.       |
0x2d81:     00 00 00 00 00 00 00                               |.......         |
0x2d88:     53 6f 20 79 6f 75 20 67  6f 74 20 74 68 61 74 20   |So you got that |   "So you got that one.  Try this one."
0x2d98:     6f 6e 65 2e 20 20 54 72  79 20 74 68 69 73 20 6f   |one.  Try this o|
0x2da8:     6e 65 2e 00                                        |ne..            |
0x2dac:     00 00 00 00                                        |....            |
0x2db0:     42 6f 72 64 65 72 20 72  65 6c 61 74 69 6f 6e 73   |Border relations|   "Border relations with Canada have never been better."
0x2dc0:     20 77 69 74 68 20 43 61  6e 61 64 61 20 68 61 76   | with Canada hav|
0x2dd0:     65 20 6e 65 76 65 72 20  62 65 65 6e 20 62 65 74   |e never been bet|
0x2de0:     74 65 72 2e 00                                     |ter..           |
0x2de5:     00 00 00                                           |...             |
0x2de8:     57 6f 77 21 20 59 6f 75  27 76 65 20 64 65 66 75   |Wow! You've defu|   "Wow! You've defused the secret stage!"
0x2df8:     73 65 64 20 74 68 65 20  73 65 63 72 65 74 20 73   |sed the secret s|
0x2e08:     74 61 67 65 21 00                                  |tage!.          |
0x2e0e:     25 64 20 25 63 20 25 64  00                        |%d %c %d.       |   "%d %c %d"
0x2e17:     00 00 00 00 00 00 00 00  00 9c e7 ff ff be e7 ff   |................|
0x2e27:     ff e0 e7 ff ff 02 e8 ff  ff 1d e8 ff ff 38 e8 ff   |.............8..|
0x2e37:     ff 53 e8 ff ff 6e e8 ff  ff 0a 00 00 00 02 00 00   |.S...n..........|
0x2e47:     00 0e 00 00 00 07 00 00  00 08 00 00 00 0c 00 00   |................|
0x2e57:     00 0f 00 00 00 0b 00 00  00 00 00 00 00 04 00 00   |................|
0x2e67:     00 01 00 00 00 0d 00 00  00 03 00 00 00 09 00 00   |................|
0x2e77:     00 06 00 00 00 05 00 00  00                        |.........       |
0x2e80:     53 6f 20 79 6f 75 20 74  68 69 6e 6b 20 79 6f 75   |So you think you|   "So you think you can stop the bomb with ctrl-c, do you?"
0x2e90:     20 63 61 6e 20 73 74 6f  70 20 74 68 65 20 62 6f   | can stop the bo|
0x2ea0:     6d 62 20 77 69 74 68 20  63 74 72 6c 2d 63 2c 20   |mb with ctrl-c, |
0x2eb0:     64 6f 20 79 6f 75 3f 00                            |do you?.        |
0x2eb8:     49 6e 69 74 69 61 6c 69  7a 61 74 69 6f 6e 20 65   |Initialization e|   "Initialization error: Running on an illegal host [1]"
0x2ec8:     72 72 6f 72 3a 20 52 75  6e 6e 69 6e 67 20 6f 6e   |rror: Running on|
0x2ed8:     20 61 6e 20 69 6c 6c 65  67 61 6c 20 68 6f 73 74   | an illegal host|
0x2ee8:     20 5b 31 5d 00                                     | [1].           |
0x2eed:     00 00 00                                           |...             |
0x2ef0:     49 6e 69 74 69 61 6c 69  7a 61 74 69 6f 6e 20 65   |Initialization e|   "Initialization error: Running on an illegal host [2]"
0x2f00:     72 72 6f 72 3a 20 52 75  6e 6e 69 6e 67 20 6f 6e   |rror: Running on|
0x2f10:     20 61 6e 20 69 6c 6c 65  67 61 6c 20 68 6f 73 74   | an illegal host|
0x2f20:     20 5b 32 5d 00                                     | [2].           |
0x2f25:     00 00 00                                           |...             |
0x2f28:     45 52 52 4f 52 3a 20 49  6e 70 75 74 20 73 74 72   |ERROR: Input str|   "ERROR: Input string is too large."
0x2f38:     69 6e 67 20 69 73 20 74  6f 6f 20 6c 61 72 67 65   |ing is too large|
0x2f48:     2e 00                                              |..              |
0x2f4a:     00 00 00 00 00 00                                  |......          |
0x2f50:     59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |   "Your instructor has been notified."
0x2f60:     68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x2f70:     64 2e 00                                           |d..             |
0x2f73:     00 00 00 00 00                                     |.....           |
0x2f78:     43 75 72 73 65 73 2c 20  79 6f 75 27 76 65 20 66   |Curses, you've f|   "Curses, you've found the secret phase!"
0x2f88:     6f 75 6e 64 20 74 68 65  20 73 65 63 72 65 74 20   |ound the secret |
0x2f98:     70 68 61 73 65 21 00                               |phase!.         |
0x2f9f:     00                                                 |.               |
0x2fa0:     42 75 74 20 66 69 6e 64  69 6e 67 20 69 74 20 61   |But finding it a|   "But finding it and solving it are quite different..."
0x2fb0:     6e 64 20 73 6f 6c 76 69  6e 67 20 69 74 20 61 72   |nd solving it ar|
0x2fc0:     65 20 71 75 69 74 65 20  64 69 66 66 65 72 65 6e   |e quite differen|
0x2fd0:     74 2e 2e 2e 00                                     |t....           |
0x2fd5:     00 00 00                                           |...             |
0x2fd8:     43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 21   |Congratulations!|   "Congratulations! You've defused the bomb!"
0x2fe8:     20 59 6f 75 27 76 65 20  64 65 66 75 73 65 64 20   | You've defused |
0x2ff8:     74 68 65 20 62 6f 6d 62  21 00                     |the bomb!.      |
0x3002:     00 00 00 00 00 00                                  |......          |
0x3008:     59 6f 75 72 20 69 6e 73  74 72 75 63 74 6f 72 20   |Your instructor |   "Your instructor has been notified and will verify your solution."
0x3018:     68 61 73 20 62 65 65 6e  20 6e 6f 74 69 66 69 65   |has been notifie|
0x3028:     64 20 61 6e 64 20 77 69  6c 6c 20 76 65 72 69 66   |d and will verif|
0x3038:     79 20 79 6f 75 72 20 73  6f 6c 75 74 69 6f 6e 2e   |y your solution.|
0x3048:     00                                                 |.               |
0x3049:     57 65 6c 6c 2e 2e 2e 00                            |Well....        |   "Well..."
0x3051:     4f 4b 2e 20 3a 2d 29 00                            |OK. :-).        |   "OK. :-)"
0x3059:     49 6e 76 61 6c 69 64 20  70 68 61 73 65 25 73 0a   |Invalid phase%s.|   "Invalid phase%s\n"
0x3069:     00                                                 |.               |
0x306a:     49 6e 69 74 69 61 6c 69  7a 61 74 69 6f 6e 20 65   |Initialization e|   "Initialization error:\n%s\n"
0x307a:     72 72 6f 72 3a 0a 25 73  0a 00                     |rror:.%s..      |
0x3084:     64 65 66 75 73 65 64 00                            |defused.        |   "defused"
0x308c:     65 78 70 6c 6f 64 65 64  00                        |exploded.       |   "exploded"
0x3095:     25 64 3a 25 73 3a 25 64  3a 25 73 00               |%d:%s:%d:%s.    |   "%d:%s:%d:%s"
0x30a1:     0a 42 4f 4f 4d 21 21 21  00                        |.BOOM!!!.       |   "\nBOOM!!!"
0x30aa:     54 68 65 20 62 6f 6d 62  20 68 61 73 20 62 6c 6f   |The bomb has blo|   "The bomb has blown up."
0x30ba:     77 6e 20 75 70 2e 00                               |wn up..         |
0x30c1:     25 64 20 25 64 20 25 64  20 25 64 20 25 64 20 25   |%d %d %d %d %d %|   "%d %d %d %d %d %d"
0x30d1:     64 00                                              |d.              |
0x30d3:     45 72 72 6f 72 3a 20 50  72 65 6d 61 74 75 72 65   |Error: Premature|   "Error: Premature EOF on stdin"
0x30e3:     20 45 4f 46 20 6f 6e 20  73 74 64 69 6e 00         | EOF on stdin.  |
0x30f1:     47 52 41 44 45 5f 42 4f  4d 42 00                  |GRADE_BOMB.     |   "GRADE_BOMB"
0x30fc:     45 72 72 6f 72 3a 20 49  6e 70 75 74 20 6c 69 6e   |Error: Input lin|   "Error: Input line too long"
0x310c:     65 20 74 6f 6f 20 6c 6f  6e 67 00                  |e too long.     |
0x3117:     25 64 20 25 64 20 25 73  00                        |%d %d %s.       |   "%d %d %s"
0x3120:     44 72 45 76 69 6c 00                               |DrEvil.         |   "DrEvil"
0x3127:     61 64 65 6c 69 65 2e 63  73 2e 70 64 78 2e 65 64   |adelie.cs.pdx.ed|   "adelie.cs.pdx.edu"
0x3137:     75 00                                              |u.              |
0x3139:     61 66 72 69 63 61 6e 2e  63 73 2e 70 64 78 2e 65   |african.cs.pdx.e|   "african.cs.pdx.edu"
0x3149:     64 75 00                                           |du.             |
0x314c:     63 68 61 74 68 61 6d 2e  63 73 2e 70 64 78 2e 65   |chatham.cs.pdx.e|   "chatham.cs.pdx.edu"
0x315c:     64 75 00                                           |du.             |
0x315f:     63 68 69 6e 73 74 72 61  70 2e 63 73 2e 70 64 78   |chinstrap.cs.pdx|   "chinstrap.cs.pdx.edu"
0x316f:     2e 65 64 75 00                                     |.edu.           |
0x3174:     64 65 67 65 2e 63 73 2e  70 64 78 2e 65 64 75 00   |dege.cs.pdx.edu.|   "dege.cs.pdx.edu"
0x3184:     65 6d 70 65 72 6f 72 2e  63 73 2e 70 64 78 2e 65   |emperor.cs.pdx.e|   "emperor.cs.pdx.edu"
0x3194:     64 75 00                                           |du.             |
0x3197:     65 72 65 63 74 2d 63 72  65 73 74 65 64 2e 63 73   |erect-crested.cs|   "erect-crested.cs.pdx.edu"
0x31a7:     2e 70 64 78 2e 65 64 75  00                        |.pdx.edu.       |
0x31b0:     66 69 6f 72 64 6c 61 6e  64 2e 63 73 2e 70 64 78   |fiordland.cs.pdx|   "fiordland.cs.pdx.edu"
0x31c0:     2e 65 64 75 00                                     |.edu.           |
0x31c5:     67 61 6c 61 70 61 67 6f  73 2e 63 73 2e 70 64 78   |galapagos.cs.pdx|   "galapagos.cs.pdx.edu"
0x31d5:     2e 65 64 75 00                                     |.edu.           |
0x31da:     67 65 6e 74 6f 6f 2e 63  73 2e 70 64 78 2e 65 64   |gentoo.cs.pdx.ed|   "gentoo.cs.pdx.edu"
0x31ea:     75 00                                              |u.              |
0x31ec:     68 75 6d 62 6f 6c 64 74  2e 63 73 2e 70 64 78 2e   |humboldt.cs.pdx.|   "humboldt.cs.pdx.edu"
0x31fc:     65 64 75 00                                        |edu.            |
0x3200:     69 63 61 64 79 70 74 65  73 2e 63 73 2e 70 64 78   |icadyptes.cs.pdx|   "icadyptes.cs.pdx.edu"
0x3210:     2e 65 64 75 00                                     |.edu.           |
0x3215:     69 6e 67 75 7a 61 2e 63  73 2e 70 64 78 2e 65 64   |inguza.cs.pdx.ed|   "inguza.cs.pdx.edu"
0x3225:     75 00                                              |u.              |
0x3227:     6b 61 69 72 75 6b 75 2e  63 73 2e 70 64 78 2e 65   |kairuku.cs.pdx.e|   "kairuku.cs.pdx.edu"
0x3237:     64 75 00                                           |du.             |
0x323a:     6b 69 6e 67 2e 63 73 2e  70 64 78 2e 65 64 75 00   |king.cs.pdx.edu.|   "king.cs.pdx.edu"
0x324a:     6b 6f 72 6f 72 61 61 2e  63 73 2e 70 64 78 2e 65   |kororaa.cs.pdx.e|   "kororaa.cs.pdx.edu"
0x325a:     64 75 00                                           |du.             |
0x325d:     6c 69 74 74 6c 65 2e 63  73 2e 70 64 78 2e 65 64   |little.cs.pdx.ed|   "little.cs.pdx.edu"
0x326d:     75 00                                              |u.              |
0x326f:     6d 61 63 61 72 6f 6e 69  2e 63 73 2e 70 64 78 2e   |macaroni.cs.pdx.|   "macaroni.cs.pdx.edu"
0x327f:     65 64 75 00                                        |edu.            |
0x3283:     6d 61 67 65 6c 6c 61 6e  69 63 2e 63 73 2e 70 64   |magellanic.cs.pd|   "magellanic.cs.pdx.edu"
0x3293:     78 2e 65 64 75 00                                  |x.edu.          |
0x3299:     70 65 72 75 64 79 70 74  65 73 2e 63 73 2e 70 64   |perudyptes.cs.pd|   "perudyptes.cs.pdx.edu"
0x32a9:     78 2e 65 64 75 00                                  |x.edu.          |
0x32af:     70 74 61 72 6d 69 67 61  6e 2e 63 73 2e 70 64 78   |ptarmigan.cs.pdx|   "ptarmigan.cs.pdx.edu"
0x32bf:     2e 65 64 75 00                                     |.edu.           |
0x32c4:     72 6f 63 6b 68 6f 70 70  65 72 2e 63 73 2e 70 64   |rockhopper.cs.pd|   "rockhopper.cs.pdx.edu"
0x32d4:     78 2e 65 64 75 00                                  |x.edu.          |
0x32da:     72 6f 79 61 6c 2e 63 73  2e 70 64 78 2e 65 64 75   |royal.cs.pdx.edu|   "royal.cs.pdx.edu"
0x32ea:     00                                                 |.               |
0x32eb:     73 6e 61 72 65 73 2e 63  73 2e 70 64 78 2e 65 64   |snares.cs.pdx.ed|   "snares.cs.pdx.edu"
0x32fb:     75 00                                              |u.              |
0x32fd:     77 61 69 6d 61 6e 75 2e  63 73 2e 70 64 78 2e 65   |waimanu.cs.pdx.e|   "waimanu.cs.pdx.edu"
0x330d:     64 75 00                                           |du.             |
0x3310:     77 68 69 74 65 2d 66 6c  69 70 70 65 72 2e 63 73   |white-flipper.cs|   "white-flipper.cs.pdx.edu"
0x3320:     2e 70 64 78 2e 65 64 75  00                        |.pdx.edu.       |
0x3329:     79 65 6c 6c 6f 77 2d 65  79 65 64 2e 63 73 2e 70   |yellow-eyed.cs.p|   "yellow-eyed.cs.pdx.edu"
0x3339:     64 78 2e 65 64 75 00                               |dx.edu.         |
0x3340:     7a 61 70 64 6f 73 2e 63  73 2e 70 64 78 2e 65 64   |zapdos.cs.pdx.ed|   "zapdos.cs.pdx.edu"
0x3350:     75 00                                              |u.              |
0x3352:     00 00 00 00 00 00                                  |......          |
0x3358:     50 72 6f 67 72 61 6d 20  74 69 6d 65 64 20 6f 75   |Program timed ou|   "Program timed out after %d seconds\n"
0x3368:     74 20 61 66 74 65 72 20  25 64 20 73 65 63 6f 6e   |t after %d secon|
0x3378:     64 73 0a 00                                        |ds..            |
0x337c:     00 00 00 00                                        |....            |
0x3380:     45 72 72 6f 72 3a 20 48  54 54 50 20 72 65 71 75   |Error: HTTP requ|   "Error: HTTP request failed with error %d: %s"
0x3390:     65 73 74 20 66 61 69 6c  65 64 20 77 69 74 68 20   |est failed with |
0x33a0:     65 72 72 6f 72 20 25 64  3a 20 25 73 00            |error %d: %s.   |
0x33ad:     00 00 00                                           |...             |
0x33b0:     47 45 54 20 2f 25 73 2f  73 75 62 6d 69 74 72 2e   |GET /%s/submitr.|   "GET /%s/submitr.pl/?userid=%s&userpwd=%s&lab=%s&result=%s&submit=submit HTTP/1.0\r\n\r\n"
0x33c0:     70 6c 2f 3f 75 73 65 72  69 64 3d 25 73 26 75 73   |pl/?userid=%s&us|
0x33d0:     65 72 70 77 64 3d 25 73  26 6c 61 62 3d 25 73 26   |erpwd=%s&lab=%s&|
0x33e0:     72 65 73 75 6c 74 3d 25  73 26 73 75 62 6d 69 74   |result=%s&submit|
0x33f0:     3d 73 75 62 6d 69 74 20  48 54 54 50 2f 31 2e 30   |=submit HTTP/1.0|
0x3400:     0d 0a 0d 0a 00                                     |.....           |
0x3405:     00 00 00                                           |...             |
0x3408:     45 72 72 6f 72 3a 20 55  6e 61 62 6c 65 20 74 6f   |Error: Unable to|   "Error: Unable to connect to server %s"
0x3418:     20 63 6f 6e 6e 65 63 74  20 74 6f 20 73 65 72 76   | connect to serv|
0x3428:     65 72 20 25 73 00                                  |er %s.          |
0x342e:     00 00                                              |..              |
0x3430:     25 25 25 30 32 58 00                               |%%%02X.         |   "%%%02X"
0x3437:     25 73 20 25 64 20 25 5b  61 2d 7a 41 2d 7a 20 5d   |%s %d %[a-zA-z ]|   "%s %d %[a-zA-z ]"
0x3447:     00                                                 |.               |
0x3448:     0d 0a 00                                           |...             |   "\r\n"
0x344b:     4f 4b 00                                           |OK.             |   "OK"
0x344e:     68 75 65 79 2e 63 73 2e  70 64 78 2e 65 64 75 00   |huey.cs.pdx.edu.|   "huey.cs.pdx.edu"
0x345e:     0a 41 55 54 4f 52 45 53  55 4c 54 5f 53 54 52 49   |.AUTORESULT_STRI|   "\nAUTORESULT_STRING=%s\n"
0x346e:     4e 47 3d 25 73 0a 00                               |NG=%s..         |
0x3475:     73 70 72 69 6e 67 31 39  4b 00                     |spring19K.      |   "spring19K"
0x347f:     63 73 61 70 70 00                                  |csapp.          |   "csapp"
0x3485:     ??                                                 |?               |
; section: .eh_frame_hdr
0x3488:     01 1b 03 3b 1c 01 00 00  22 00 00 00 18 dc ff ff   |...;....".......|
0x3498:     68 01 00 00 d8 dd ff ff  90 01 00 00 e8 dd ff ff   |h...............|
0x34a8:     38 01 00 00 f2 de ff ff  a8 01 00 00 4c e0 ff ff   |8...........L...|
0x34b8:     c8 01 00 00 6c e0 ff ff  e4 01 00 00 da e0 ff ff   |....l...........|
0x34c8:     10 02 00 00 4d e2 ff ff  2c 02 00 00 8c e2 ff ff   |....M...,.......|
0x34d8:     48 02 00 00 01 e3 ff ff  64 02 00 00 94 e3 ff ff   |H.......d.......|
0x34e8:     80 02 00 00 b6 e4 ff ff  c0 02 00 00 f5 e4 ff ff   |................|
0x34f8:     e0 02 00 00 4d e5 ff ff  00 03 00 00 a9 e5 ff ff   |....M...........|
0x3508:     14 03 00 00 d0 e5 ff ff  28 03 00 00 ed e5 ff ff   |........(.......|
0x3518:     3c 03 00 00 54 e6 ff ff  68 03 00 00 42 e7 ff ff   |<...T...h...B...|
0x3528:     94 03 00 00 44 e7 ff ff  a8 03 00 00 7f e7 ff ff   |....D...........|
0x3538:     d0 03 00 00 cd e7 ff ff  f8 03 00 00 f1 e8 ff ff   |................|
0x3548:     30 04 00 00 2d e9 ff ff  44 04 00 00 6e e9 ff ff   |0...-...D...n...|
0x3558:     68 04 00 00 b2 ea ff ff  84 04 00 00 76 eb ff ff   |h...........v...|
0x3568:     a0 04 00 00 a6 eb ff ff  b4 04 00 00 62 ec ff ff   |............b...|
0x3578:     f4 04 00 00 a3 f4 ff ff  60 05 00 00 ce f4 ff ff   |........`.......|
0x3588:     7c 05 00 00 d7 f6 ff ff  b0 05 00 00 58 f7 ff ff   ||...........X...|
0x3598:     d8 05 00 00 c8 f7 ff ff  20 06 00 00 ??            |........ ...?   |
; section: .eh_frame
0x35a8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x35b8:     1b 0c 07 08 90 01 07 10  14 00 00 00 1c 00 00 00   |................|
0x35c8:     a8 dc ff ff 2b 00 00 00  00 00 00 00 00 00 00 00   |....+...........|
0x35d8:     14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01   |.........zR..x..|
0x35e8:     1b 0c 07 08 90 01 00 00  24 00 00 00 1c 00 00 00   |........$.......|
0x35f8:     a8 da ff ff c0 01 00 00  00 0e 10 46 0e 18 4a 0f   |...........F..J.|
0x3608:     0b 77 08 80 00 3f 1a 3b  2a 33 24 22 00 00 00 00   |.w...?.;*3$"....|
0x3618:     14 00 00 00 44 00 00 00  40 dc ff ff 08 00 00 00   |....D...@.......|
0x3628:     00 00 00 00 00 00 00 00  1c 00 00 00 5c 00 00 00   |............\...|
0x3638:     42 dd ff ff 5a 01 00 00  00 41 0e 10 83 02 03 00   |B...Z....A......|
0x3648:     01 0a 0e 08 41 0b 00 00  18 00 00 00 7c 00 00 00   |....A.......|...|
0x3658:     7c de ff ff 20 00 00 00  00 44 0e 10 54 0a 0e 08   ||... ....D..T...|
0x3668:     41 0b 00 00 28 00 00 00  98 00 00 00 80 de ff ff   |A...(...........|
0x3678:     6e 00 00 00 00 41 0e 10  86 02 41 0e 18 83 03 44   |n....A....A....D|
0x3688:     0e 40 02 60 0a 0e 18 41  0e 10 41 0e 08 41 0b 00   |.@.`...A..A..A..|
0x3698:     18 00 00 00 c4 00 00 00  c2 de ff ff 73 01 00 00   |............s...|
0x36a8:     00 44 0e 30 03 69 01 0a  0e 08 41 0b 18 00 00 00   |.D.0.i....A.....|
0x36b8:     e0 00 00 00 19 e0 ff ff  3f 00 00 00 00 44 0e 10   |........?....D..|
0x36c8:     60 0a 0e 08 41 0b 00 00  18 00 00 00 fc 00 00 00   |`...A...........|
0x36d8:     3c e0 ff ff 75 00 00 00  00 44 0e 20 02 6b 0a 0e   |<...u....D. .k..|
0x36e8:     08 41 0b 00 18 00 00 00  18 01 00 00 95 e0 ff ff   |.A..............|
0x36f8:     93 00 00 00 00 44 0e 20  02 82 0a 0e 08 41 0b 00   |.....D. .....A..|
0x3708:     3c 00 00 00 34 01 00 00  0c e1 ff ff 22 01 00 00   |<...4......."...|
0x3718:     00 42 0e 10 8d 02 42 0e  18 8c 03 41 0e 20 86 04   |.B....B....A. ..|
0x3728:     41 0e 28 83 05 44 0e 90  01 03 0c 01 0a 0e 28 41   |A.(..D........(A|
0x3738:     0e 20 41 0e 18 42 0e 10  42 0e 08 41 0b 00 00 00   |. A..B..B..A....|
0x3748:     1c 00 00 00 74 01 00 00  ee e1 ff ff 3f 00 00 00   |....t.......?...|
0x3758:     00 49 0e 10 53 0a 0e 08  41 0b 5c 0e 08 00 00 00   |.I..S...A.\.....|
0x3768:     1c 00 00 00 94 01 00 00  0d e2 ff ff 58 00 00 00   |............X...|
0x3778:     00 41 0e 10 83 02 02 48  0a 0e 08 41 0b 00 00 00   |.A.....H...A....|
0x3788:     10 00 00 00 b4 01 00 00  45 e2 ff ff 5c 00 00 00   |........E...\...|
0x3798:     00 44 0e 10 10 00 00 00  c8 01 00 00 8d e2 ff ff   |.D..............|
0x37a8:     27 00 00 00 00 44 0e 10  10 00 00 00 dc 01 00 00   |'....D..........|
0x37b8:     a0 e2 ff ff 1d 00 00 00  00 00 00 00 28 00 00 00   |............(...|
0x37c8:     f0 01 00 00 a9 e2 ff ff  67 00 00 00 00 42 0e 10   |........g....B..|
0x37d8:     8c 02 41 0e 18 86 03 41  0e 20 83 04 63 0a 0e 18   |..A....A. ..c...|
0x37e8:     41 0e 10 42 0e 08 41 0b  28 00 00 00 1c 02 00 00   |A..B..A.(.......|
0x37f8:     e4 e2 ff ff ee 00 00 00  00 41 0e 10 86 02 41 0e   |.........A....A.|
0x3808:     18 83 03 47 0e f0 40 02  dd 0a 0e 18 41 0e 10 41   |...G..@.....A..A|
0x3818:     0e 08 41 0b 10 00 00 00  48 02 00 00 a6 e3 ff ff   |..A.....H.......|
0x3828:     02 00 00 00 00 00 00 00  24 00 00 00 5c 02 00 00   |........$...\...|
0x3838:     94 e3 ff ff 3b 00 00 00  00 41 0e 10 86 02 41 0e   |....;....A....A.|
0x3848:     18 83 03 44 0e 20 72 0e  18 41 0e 10 41 0e 08 00   |...D. r..A..A...|
0x3858:     24 00 00 00 84 02 00 00  a7 e3 ff ff 4e 00 00 00   |$...........N...|
0x3868:     00 41 0e 10 86 02 41 0e  18 83 03 44 0e 20 02 45   |.A....A....D. .E|
0x3878:     0e 18 41 0e 10 41 0e 08  34 00 00 00 ac 02 00 00   |..A..A..4.......|
0x3888:     cd e3 ff ff 24 01 00 00  00 41 0e 10 83 02 47 0e   |....$....A....G.|
0x3898:     a0 80 01 02 73 0e a8 80  01 41 0e b0 80 01 02 4c   |....s....A.....L|
0x38a8:     0e a0 80 01 5e 0a 0e 10  41 0e 08 41 0b 00 00 00   |....^...A..A....|
0x38b8:     10 00 00 00 e4 02 00 00  b9 e4 ff ff 3c 00 00 00   |............<...|
0x38c8:     00 44 0e 10 20 00 00 00  f8 02 00 00 e1 e4 ff ff   |.D.. ...........|
0x38d8:     41 00 00 00 00 44 0e 10  4c 0e 18 45 0e 20 5d 0e   |A....D..L..E. ].|
0x38e8:     10 49 0a 0e 08 41 0b 00  18 00 00 00 1c 03 00 00   |.I...A..........|
0x38f8:     fe e4 ff ff 44 01 00 00  00 44 0e 10 02 7d 0a 0e   |....D....D...}..|
0x3908:     08 41 0b 00 18 00 00 00  38 03 00 00 26 e6 ff ff   |.A......8...&...|
0x3918:     c4 00 00 00 00 44 0e 80  01 7b 0a 0e 08 41 0b 00   |.....D...{...A..|
0x3928:     10 00 00 00 54 03 00 00  ce e6 ff ff 30 00 00 00   |....T.......0...|
0x3938:     00 44 0e 10 3c 00 00 00  68 03 00 00 ea e6 ff ff   |.D..<...h.......|
0x3948:     bc 00 00 00 00 42 0e 10  8e 02 42 0e 18 8d 03 42   |.....B....B....B|
0x3958:     0e 20 8c 04 41 0e 28 86  05 41 0e 30 83 06 02 84   |. ..A.(..A.0....|
0x3968:     0a 0e 28 41 0e 20 42 0e  18 42 0e 10 42 0e 08 41   |..(A. B..B..B..A|
0x3978:     0b 00 00 00 68 00 00 00  a8 03 00 00 66 e7 ff ff   |....h.......f...|
0x3988:     41 08 00 00 00 42 0e 10  8f 02 42 0e 18 8e 03 42   |A....B....B....B|
0x3998:     0e 20 8d 04 42 0e 28 8c  05 41 0e 30 86 06 41 0e   |. ..B.(..A.0..A.|
0x39a8:     38 83 07 47 0e b0 c1 02  03 9d 06 0a 0e 38 41 0e   |8..G.........8A.|
0x39b8:     30 41 0e 28 42 0e 20 42  0e 18 42 0e 10 42 0e 08   |0A.(B. B..B..B..|
0x39c8:     41 0b 03 0c 01 0e b8 c1  02 49 0e c0 c1 02 44 0e   |A........I....D.|
0x39d8:     c8 c1 02 44 0e d0 c1 02  02 47 0e b0 c1 02 00 00   |...D.....G......|
0x39e8:     18 00 00 00 14 04 00 00  3b ef ff ff 2b 00 00 00   |........;...+...|
0x39f8:     00 45 0e 10 83 02 63 0e  08 41 c3 00 30 00 00 00   |.E....c..A..0...|
0x3a08:     30 04 00 00 4a ef ff ff  09 02 00 00 00 42 0e 10   |0...J........B..|
0x3a18:     8c 02 41 0e 18 86 03 41  0e 20 83 04 44 0e 40 02   |..A....A. ..D.@.|
0x3a28:     fa 0a 0e 20 41 0e 18 41  0e 10 42 0e 08 41 0b 00   |... A..A..B..A..|
0x3a38:     24 00 00 00 64 04 00 00  1f f1 ff ff 73 00 00 00   |$...d.......s...|
0x3a48:     00 41 0e 10 83 02 5d 0a  0e 08 41 0b 68 0e 18 41   |.A....]...A.h..A|
0x3a58:     0e 20 69 0e 10 00 00 00  44 00 00 00 8c 04 00 00   |. i.....D.......|
0x3a68:     78 f1 ff ff 65 00 00 00  00 42 0e 10 8f 02 42 0e   |x...e....B....B.|
0x3a78:     18 8e 03 45 0e 20 8d 04  42 0e 28 8c 05 48 0e 30   |...E. ..B.(..H.0|
0x3a88:     86 06 48 0e 38 83 07 4d  0e 40 72 0e 38 41 0e 30   |..H.8..M.@r.8A.0|
0x3a98:     41 0e 28 42 0e 20 42 0e  18 42 0e 10 42 0e 08 00   |A.(B. B..B..B...|
0x3aa8:     10 00 00 00 d4 04 00 00  a0 f1 ff ff 02 00 00 00   |................|
0x3ab8:     00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x203ce8:   70 13 00 00 00 00 00 00  30                        |p.......0       |
; section: .fini_array
0x203cf0:   30 13 00 00 00 00 00 00  01                        |0........       |
; section: .dynamic
0x203cf8:   01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00   |................|
0x203d08:   0c 00 00 00 00 00 00 00  88 10 00 00 00 00 00 00   |................|
0x203d18:   0d 00 00 00 00 00 00 00  54 2c 00 00 00 00 00 00   |........T,......|
0x203d28:   19 00 00 00 00 00 00 00  e8 3c 20 00 00 00 00 00   |.........< .....|
0x203d38:   1b 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x203d48:   1a 00 00 00 00 00 00 00  f0 3c 20 00 00 00 00 00   |.........< .....|
0x203d58:   1c 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x203d68:   f5 fe ff 6f 00 00 00 00  98 02 00 00 00 00 00 00   |...o............|
0x203d78:   05 00 00 00 00 00 00 00  28 06 00 00 00 00 00 00   |........(.......|
0x203d88:   06 00 00 00 00 00 00 00  c8 02 00 00 00 00 00 00   |................|
0x203d98:   0a 00 00 00 00 00 00 00  bc 01 00 00 00 00 00 00   |................|
0x203da8:   0b 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x203db8:   15 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203dc8:   03 00 00 00 00 00 00 00  e8 3e 20 00 00 00 00 00   |.........> .....|
0x203dd8:   02 00 00 00 00 00 00 00  88 02 00 00 00 00 00 00   |................|
0x203de8:   14 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00   |................|
0x203df8:   17 00 00 00 00 00 00 00  00 0e 00 00 00 00 00 00   |................|
0x203e08:   07 00 00 00 00 00 00 00  90 08 00 00 00 00 00 00   |................|
0x203e18:   08 00 00 00 00 00 00 00  70 05 00 00 00 00 00 00   |........p.......|
0x203e28:   09 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00   |................|
0x203e38:   1e 00 00 00 00 00 00 00  08 00 00 00 00 00 00 00   |................|
0x203e48:   fb ff ff 6f 00 00 00 00  01 00 00 08 00 00 00 00   |...o............|
0x203e58:   fe ff ff 6f 00 00 00 00  30 08 00 00 00 00 00 00   |...o....0.......|
0x203e68:   ff ff ff 6f 00 00 00 00  01 00 00 00 00 00 00 00   |...o............|
0x203e78:   f0 ff ff 6f 00 00 00 00  e4 07 00 00 00 00 00 00   |...o............|
0x203e88:   f9 ff ff 6f 00 00 00 00  32 00 00 00 00 00 00 00   |...o....2.......|
0x203e98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203ea8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203eb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203ec8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203ed8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203ee8:   f8                                                 |.               |
; section: .got
0x203ee8:   f8 3c 20 00 00 00 00 00  00 00 00 00 00 00 00 00   |.< .............|
0x203ef8:   00 00 00 00 00 00 00 00  b6 10 00 00 00 00 00 00   |................|
0x203f08:   c6 10 00 00 00 00 00 00  d6 10 00 00 00 00 00 00   |................|
0x203f18:   e6 10 00 00 00 00 00 00  f6 10 00 00 00 00 00 00   |................|
0x203f28:   06 11 00 00 00 00 00 00  16 11 00 00 00 00 00 00   |................|
0x203f38:   26 11 00 00 00 00 00 00  36 11 00 00 00 00 00 00   |&.......6.......|
0x203f48:   46 11 00 00 00 00 00 00  56 11 00 00 00 00 00 00   |F.......V.......|
0x203f58:   66 11 00 00 00 00 00 00  76 11 00 00 00 00 00 00   |f.......v.......|
0x203f68:   86 11 00 00 00 00 00 00  96 11 00 00 00 00 00 00   |................|
0x203f78:   a6 11 00 00 00 00 00 00  b6 11 00 00 00 00 00 00   |................|
0x203f88:   c6 11 00 00 00 00 00 00  d6 11 00 00 00 00 00 00   |................|
0x203f98:   e6 11 00 00 00 00 00 00  f6 11 00 00 00 00 00 00   |................|
0x203fa8:   06 12 00 00 00 00 00 00  16 12 00 00 00 00 00 00   |................|
0x203fb8:   26 12 00 00 00 00 00 00  36 12 00 00 00 00 00 00   |&.......6.......|
0x203fc8:   46 12 00 00 00 00 00 00  56 12 00 00 00 00 00 00   |F.......V.......|
0x203fd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203fe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x203ff8:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .data
0x204000:   00 00 00 00 00 00 00 00  08 40 20 00 00 00 00 00   |.........@ .....|
0x204010:   28 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |(...............|
0x204020:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204030:   01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204040:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204050:   63 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |c...............|
0x204060:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204070:   23 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |#...............|
0x204080:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204090:   07 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2040a0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2040b0:   14 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2040c0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2040d0:   2f 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |/...............|
0x2040e0:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2040f0:   e9 03 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204100:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204110:   88 02 00 00 06 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204120:   33 46 45 55 48 43 4c 56  52 37 49 33 32 65 6a 45   |3FEUHCLVR7I32ejE|   "3FEUHCLVR7I32ejEDX2n"
0x204130:   44 58 32 6e 00                                     |DX2n.           |
0x204135:   00 00 00                                           |...             |
0x204138:   6a 62 65 64 65 74 74 65  00                        |jbedette.       |   "jbedette"
0x204141:   00 00 00 07 00 00 00 00  00 00 00 00 00 00 00 24   |...............$|
0x204151:   00 00 00 00 00 00 00 70  41 20 00 00 00 00 00 90   |.......pA ......|
0x204161:   41 20 00 00 00 00 00 00  00 00 00 00 00 00 00 08   |A ..............|
0x204171:   00 00 00 00 00 00 00 f0  41 20 00 00 00 00 00 b0   |........A ......|
0x204181:   41 20 00 00 00 00 00 00  00 00 00 00 00 00 00 32   |A .............2|
0x204191:   00 00 00 00 00 00 00 d0  41 20 00 00 00 00 00 10   |........A ......|
0x2041a1:   42 20 00 00 00 00 00 00  00 00 00 00 00 00 00 16   |B ..............|
0x2041b1:   00 00 00 00 00 00 00 b0  40 20 00 00 00 00 00 70   |........@ .....p|
0x2041c1:   40 20 00 00 00 00 00 00  00 00 00 00 00 00 00 2d   |@ .............-|
0x2041d1:   00 00 00 00 00 00 00 10  40 20 00 00 00 00 00 d0   |........@ ......|
0x2041e1:   40 20 00 00 00 00 00 00  00 00 00 00 00 00 00 06   |@ ..............|
0x2041f1:   00 00 00 00 00 00 00 30  40 20 00 00 00 00 00 90   |.......0@ ......|
0x204201:   40 20 00 00 00 00 00 00  00 00 00 00 00 00 00 6b   |@ .............k|
0x204211:   00 00 00 00 00 00 00 50  40 20 00 00 00 00 00 f0   |.......P@ ......|
0x204221:   40 20 00 00 00 00 00 00  00 00 00 00 00 00 00 f7   |@ ..............|
0x204231:   01 00 00 01 00 00 00 40  42 20 00 00 00 00 00 bf   |.......@B ......|
0x204241:   00 00 00 02 00 00 00 50  42 20 00 00 00 00 00 76   |.......PB .....v|
0x204251:   01 00 00 03 00 00 00 60  42 20 00 00 00 00 00 f9   |.......`B ......|
0x204261:   00 00 00 04 00 00 00 70  42 20 00 00 00 00 00 44   |.......pB .....D|
0x204271:   01 00 00 05 00 00 00 10  41 20 00 00 00 00 00 27   |........A .....'|
0x204281:   31 00 00 00 00 00 00 39  31 00 00 00 00 00 00 4c   |1......91......L|
0x204291:   31 00 00 00 00 00 00 5f  31 00 00 00 00 00 00 74   |1......_1......t|
0x2042a1:   31 00 00 00 00 00 00 84  31 00 00 00 00 00 00 97   |1.......1.......|
0x2042b1:   31 00 00 00 00 00 00 b0  31 00 00 00 00 00 00 c5   |1.......1.......|
0x2042c1:   31 00 00 00 00 00 00 da  31 00 00 00 00 00 00 ec   |1.......1.......|
0x2042d1:   31 00 00 00 00 00 00 00  32 00 00 00 00 00 00 15   |1.......2.......|
0x2042e1:   32 00 00 00 00 00 00 27  32 00 00 00 00 00 00 3a   |2......'2......:|
0x2042f1:   32 00 00 00 00 00 00 4a  32 00 00 00 00 00 00 5d   |2......J2......]|
0x204301:   32 00 00 00 00 00 00 6f  32 00 00 00 00 00 00 83   |2......o2.......|
0x204311:   32 00 00 00 00 00 00 99  32 00 00 00 00 00 00 af   |2.......2.......|
0x204321:   32 00 00 00 00 00 00 c4  32 00 00 00 00 00 00 da   |2.......2.......|
0x204331:   32 00 00 00 00 00 00 eb  32 00 00 00 00 00 00 fd   |2.......2.......|
0x204341:   32 00 00 00 00 00 00 10  33 00 00 00 00 00 00 29   |2.......3......)|
0x204351:   33 00 00 00 00 00 00 40  33 00 00 00 00 00 00 00   |3......@3.......|
0x204361:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204371:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204381:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204391:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2043f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204401:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204411:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204421:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204431:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204441:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204451:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204461:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204471:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204481:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204491:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2044f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204501:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204511:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204521:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204531:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204541:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204551:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204561:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204571:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204581:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204591:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045a1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045b1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045c1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045d1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045e1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x2045f1:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204601:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204611:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204621:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204631:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204641:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204651:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204661:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x204671:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
